type Aggregate {
  count: Int!
}

"""Asset system model"""
type Asset implements Node {
  """The time the document was created"""
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!

  """User that created this document"""
  createdBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """Potential stages that should be returned"""
    stages: [Stage!]! = [PUBLISHED, DRAFT]
  ): [Asset!]!

  """The file name"""
  fileName: String!

  """The file handle"""
  handle: String!

  """The height of the file"""
  height: Float

  """List of Asset versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0

    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!

  """The unique identifier"""
  id: ID!

  """System Locale field"""
  locale: Locale!

  """Get the other localizations for this document"""
  localizations(
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false

    """
    Potential locales that should be returned. 
    
    The order of locales will also override locale fall-backing behaviour in the query's subtree.
    
    Note any related model with localized fields in the query's subtree will be affected.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    
    Consider using this in conjunction with forceParentLocale on the children relation fields.
    """
    locales: [Locale!]! = [en, nl]
  ): [Asset!]!

  """The mime type of the file"""
  mimeType: String

  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime

  """User that last published this document"""
  publishedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  scheduledIn(
    after: String
    before: String
    first: Int

    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    skip: Int
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """The file size"""
  size: Float

  """System stage field"""
  stage: Stage!

  """The time the document was updated"""
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!

  """User that last updated this document"""
  updatedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """Get the url for the asset with provided transformations applied."""
  url(transformation: AssetTransformationInput): String!

  """The file width"""
  width: Float
}

input AssetConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: AssetWhereUniqueInput!
}

"""A connection to a list of items."""
type AssetConnection {
  aggregate: Aggregate!

  """A list of edges."""
  edges: [AssetEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input AssetCreateInput {
  createdAt: DateTime
  fileName: String!
  handle: String!
  height: Float
  imageLogo: ImageEntryCreateManyInlineInput

  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: AssetCreateLocalizationsInput
  mimeType: String
  size: Float
  updatedAt: DateTime
  width: Float
}

input AssetCreateLocalizationDataInput {
  createdAt: DateTime
  fileName: String!
  handle: String!
  height: Float
  mimeType: String
  size: Float
  updatedAt: DateTime
  width: Float
}

input AssetCreateLocalizationInput {
  """Localization input"""
  data: AssetCreateLocalizationDataInput!
  locale: Locale!
}

input AssetCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [AssetCreateLocalizationInput!]
}

input AssetCreateManyInlineInput {
  """Connect multiple existing Asset documents"""
  connect: [AssetWhereUniqueInput!]

  """Create and connect multiple existing Asset documents"""
  create: [AssetCreateInput!]
}

input AssetCreateOneInlineInput {
  """Connect one existing Asset document"""
  connect: AssetWhereUniqueInput

  """Create and connect one Asset document"""
  create: AssetCreateInput
}

"""An edge in a connection."""
type AssetEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Asset!
}

"""Identifies documents"""
input AssetManyWhereInput {
  """Logical AND on all given filters."""
  AND: [AssetWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AssetWhereInput!]

  """Logical OR on all given filters."""
  OR: [AssetWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: AssetWhereStageInput
  documentInStages_none: AssetWhereStageInput
  documentInStages_some: AssetWhereStageInput
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

enum AssetOrderByInput {
  createdAt_ASC
  createdAt_DESC
  fileName_ASC
  fileName_DESC
  handle_ASC
  handle_DESC
  height_ASC
  height_DESC
  id_ASC
  id_DESC
  mimeType_ASC
  mimeType_DESC
  publishedAt_ASC
  publishedAt_DESC
  size_ASC
  size_DESC
  updatedAt_ASC
  updatedAt_DESC
  width_ASC
  width_DESC
}

"""Transformations for Assets"""
input AssetTransformationInput {
  document: DocumentTransformationInput
  image: ImageTransformationInput

  """Pass true if you want to validate the passed transformation parameters"""
  validateOptions: Boolean = false
}

input AssetUpdateInput {
  fileName: String
  handle: String
  height: Float
  imageLogo: ImageEntryUpdateManyInlineInput

  """Manage document localizations"""
  localizations: AssetUpdateLocalizationsInput
  mimeType: String
  size: Float
  width: Float
}

input AssetUpdateLocalizationDataInput {
  fileName: String
  handle: String
  height: Float
  mimeType: String
  size: Float
  width: Float
}

input AssetUpdateLocalizationInput {
  data: AssetUpdateLocalizationDataInput!
  locale: Locale!
}

input AssetUpdateLocalizationsInput {
  """Localizations to create"""
  create: [AssetCreateLocalizationInput!]

  """Localizations to delete"""
  delete: [Locale!]

  """Localizations to update"""
  update: [AssetUpdateLocalizationInput!]
  upsert: [AssetUpsertLocalizationInput!]
}

input AssetUpdateManyInlineInput {
  """Connect multiple existing Asset documents"""
  connect: [AssetConnectInput!]

  """Create and connect multiple Asset documents"""
  create: [AssetCreateInput!]

  """Delete multiple Asset documents"""
  delete: [AssetWhereUniqueInput!]

  """Disconnect multiple Asset documents"""
  disconnect: [AssetWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing Asset documents
  """
  set: [AssetWhereUniqueInput!]

  """Update multiple Asset documents"""
  update: [AssetUpdateWithNestedWhereUniqueInput!]

  """Upsert multiple Asset documents"""
  upsert: [AssetUpsertWithNestedWhereUniqueInput!]
}

input AssetUpdateManyInput {
  fileName: String
  height: Float

  """Optional updates to localizations"""
  localizations: AssetUpdateManyLocalizationsInput
  mimeType: String
  size: Float
  width: Float
}

input AssetUpdateManyLocalizationDataInput {
  fileName: String
  height: Float
  mimeType: String
  size: Float
  width: Float
}

input AssetUpdateManyLocalizationInput {
  data: AssetUpdateManyLocalizationDataInput!
  locale: Locale!
}

input AssetUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [AssetUpdateManyLocalizationInput!]
}

input AssetUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: AssetUpdateManyInput!

  """Document search"""
  where: AssetWhereInput!
}

input AssetUpdateOneInlineInput {
  """Connect existing Asset document"""
  connect: AssetWhereUniqueInput

  """Create and connect one Asset document"""
  create: AssetCreateInput

  """Delete currently connected Asset document"""
  delete: Boolean

  """Disconnect currently connected Asset document"""
  disconnect: Boolean

  """Update single Asset document"""
  update: AssetUpdateWithNestedWhereUniqueInput

  """Upsert single Asset document"""
  upsert: AssetUpsertWithNestedWhereUniqueInput
}

input AssetUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: AssetUpdateInput!

  """Unique document search"""
  where: AssetWhereUniqueInput!
}

input AssetUpsertInput {
  """Create document if it didn't exist"""
  create: AssetCreateInput!

  """Update document if it exists"""
  update: AssetUpdateInput!
}

input AssetUpsertLocalizationInput {
  create: AssetCreateLocalizationDataInput!
  locale: Locale!
  update: AssetUpdateLocalizationDataInput!
}

input AssetUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: AssetUpsertInput!

  """Unique document search"""
  where: AssetWhereUniqueInput!
}

"""
This contains a set of filters that can be used to compare values internally
"""
input AssetWhereComparatorInput {
  """
  This field can be used to request to check if the entry is outdated by internal comparison
  """
  outdated_to: Boolean
}

"""Identifies documents"""
input AssetWhereInput {
  """Logical AND on all given filters."""
  AND: [AssetWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AssetWhereInput!]

  """Logical OR on all given filters."""
  OR: [AssetWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: AssetWhereStageInput
  documentInStages_none: AssetWhereStageInput
  documentInStages_some: AssetWhereStageInput
  fileName: String

  """All values containing the given string."""
  fileName_contains: String

  """All values ending with the given string."""
  fileName_ends_with: String

  """All values that are contained in given list."""
  fileName_in: [String]

  """All values that are not equal to given value."""
  fileName_not: String

  """All values not containing the given string."""
  fileName_not_contains: String

  """All values not ending with the given string"""
  fileName_not_ends_with: String

  """All values that are not contained in given list."""
  fileName_not_in: [String]

  """All values not starting with the given string."""
  fileName_not_starts_with: String

  """All values starting with the given string."""
  fileName_starts_with: String
  handle: String

  """All values containing the given string."""
  handle_contains: String

  """All values ending with the given string."""
  handle_ends_with: String

  """All values that are contained in given list."""
  handle_in: [String]

  """All values that are not equal to given value."""
  handle_not: String

  """All values not containing the given string."""
  handle_not_contains: String

  """All values not ending with the given string"""
  handle_not_ends_with: String

  """All values that are not contained in given list."""
  handle_not_in: [String]

  """All values not starting with the given string."""
  handle_not_starts_with: String

  """All values starting with the given string."""
  handle_starts_with: String
  height: Float

  """All values greater than the given value."""
  height_gt: Float

  """All values greater than or equal the given value."""
  height_gte: Float

  """All values that are contained in given list."""
  height_in: [Float]

  """All values less than the given value."""
  height_lt: Float

  """All values less than or equal the given value."""
  height_lte: Float

  """All values that are not equal to given value."""
  height_not: Float

  """All values that are not contained in given list."""
  height_not_in: [Float]
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  mimeType: String

  """All values containing the given string."""
  mimeType_contains: String

  """All values ending with the given string."""
  mimeType_ends_with: String

  """All values that are contained in given list."""
  mimeType_in: [String]

  """All values that are not equal to given value."""
  mimeType_not: String

  """All values not containing the given string."""
  mimeType_not_contains: String

  """All values not ending with the given string"""
  mimeType_not_ends_with: String

  """All values that are not contained in given list."""
  mimeType_not_in: [String]

  """All values not starting with the given string."""
  mimeType_not_starts_with: String

  """All values starting with the given string."""
  mimeType_starts_with: String
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  size: Float

  """All values greater than the given value."""
  size_gt: Float

  """All values greater than or equal the given value."""
  size_gte: Float

  """All values that are contained in given list."""
  size_in: [Float]

  """All values less than the given value."""
  size_lt: Float

  """All values less than or equal the given value."""
  size_lte: Float

  """All values that are not equal to given value."""
  size_not: Float

  """All values that are not contained in given list."""
  size_not_in: [Float]
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
  width: Float

  """All values greater than the given value."""
  width_gt: Float

  """All values greater than or equal the given value."""
  width_gte: Float

  """All values that are contained in given list."""
  width_in: [Float]

  """All values less than the given value."""
  width_lt: Float

  """All values less than or equal the given value."""
  width_lte: Float

  """All values that are not equal to given value."""
  width_not: Float

  """All values that are not contained in given list."""
  width_not_in: [Float]
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input AssetWhereStageInput {
  """Logical AND on all given filters."""
  AND: [AssetWhereStageInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AssetWhereStageInput!]

  """Logical OR on all given filters."""
  OR: [AssetWhereStageInput!]

  """
  This field contains fields which can be set as true or false to specify an internal comparison
  """
  compareWithParent: AssetWhereComparatorInput

  """Specify the stage to compare with"""
  stage: Stage
}

"""References Asset record uniquely"""
input AssetWhereUniqueInput {
  id: ID
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

"""
Representing a color value comprising of HEX, RGBA and css color values
"""
type Color {
  css: String!
  hex: Hex!
  rgba: RGBA!
}

"""
Accepts either HEX or RGBA color value. At least one of hex or rgba value should be passed. If both are passed RGBA is used.
"""
input ColorInput {
  hex: Hex
  rgba: RGBAInput
}

input ConnectPositionInput {
  """Connect document after specified document"""
  after: ID

  """Connect document before specified document"""
  before: ID

  """Connect document at last position"""
  end: Boolean

  """Connect document at first position"""
  start: Boolean
}

type CvPage implements Node {
  """The time the document was created"""
  createdAt: DateTime!

  """User that created this document"""
  createdBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """Potential stages that should be returned"""
    stages: [Stage!]! = [PUBLISHED, DRAFT]
  ): [CvPage!]!

  """List of CvPage versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0

    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!

  """The unique identifier"""
  id: ID!
  privateImageBlock(
    """
    Sets the locale of the parent document as the first locale in the fallback locales in the query's subtree.
    
    Note that `privateImageBlock` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `privateImageBlock` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): ImageBlock
  profileImageBlock(
    """
    Sets the locale of the parent document as the first locale in the fallback locales in the query's subtree.
    
    Note that `profileImageBlock` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `profileImageBlock` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): ImageBlock

  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime

  """User that last published this document"""
  publishedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  scheduledIn(
    after: String
    before: String
    first: Int

    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    skip: Int
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!
  skillsList(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `skillsList` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `skillsList` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): List
  slug: String!

  """System stage field"""
  stage: Stage!
  titleBlock(
    """
    Sets the locale of the parent document as the first locale in the fallback locales in the query's subtree.
    
    Note that `titleBlock` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `titleBlock` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): TitleBlock

  """The time the document was updated"""
  updatedAt: DateTime!

  """User that last updated this document"""
  updatedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

input CvPageConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: CvPageWhereUniqueInput!
}

"""A connection to a list of items."""
type CvPageConnection {
  aggregate: Aggregate!

  """A list of edges."""
  edges: [CvPageEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input CvPageCreateInput {
  createdAt: DateTime

  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: CvPageCreateLocalizationsInput
  privateImageBlock: ImageBlockCreateOneInlineInput
  profileImageBlock: ImageBlockCreateOneInlineInput
  skillsList: ListCreateOneInlineInput
  slug: String!
  titleBlock: TitleBlockCreateOneInlineInput
  updatedAt: DateTime
}

input CvPageCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
}

input CvPageCreateLocalizationInput {
  """Localization input"""
  data: CvPageCreateLocalizationDataInput!
  locale: Locale!
}

input CvPageCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [CvPageCreateLocalizationInput!]
}

input CvPageCreateManyInlineInput {
  """Connect multiple existing CvPage documents"""
  connect: [CvPageWhereUniqueInput!]

  """Create and connect multiple existing CvPage documents"""
  create: [CvPageCreateInput!]
}

input CvPageCreateOneInlineInput {
  """Connect one existing CvPage document"""
  connect: CvPageWhereUniqueInput

  """Create and connect one CvPage document"""
  create: CvPageCreateInput
}

"""An edge in a connection."""
type CvPageEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: CvPage!
}

"""Identifies documents"""
input CvPageManyWhereInput {
  """Logical AND on all given filters."""
  AND: [CvPageWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CvPageWhereInput!]

  """Logical OR on all given filters."""
  OR: [CvPageWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: CvPageWhereStageInput
  documentInStages_none: CvPageWhereStageInput
  documentInStages_some: CvPageWhereStageInput
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  privateImageBlock: ImageBlockWhereInput
  profileImageBlock: ImageBlockWhereInput
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  skillsList: ListWhereInput
  slug: String

  """All values containing the given string."""
  slug_contains: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values that are contained in given list."""
  slug_in: [String]

  """All values that are not equal to given value."""
  slug_not: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values not ending with the given string"""
  slug_not_ends_with: String

  """All values that are not contained in given list."""
  slug_not_in: [String]

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values starting with the given string."""
  slug_starts_with: String
  titleBlock: TitleBlockWhereInput
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

enum CvPageOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  publishedAt_ASC
  publishedAt_DESC
  slug_ASC
  slug_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input CvPageUpdateInput {
  """Manage document localizations"""
  localizations: CvPageUpdateLocalizationsInput
  privateImageBlock: ImageBlockUpdateOneInlineInput
  profileImageBlock: ImageBlockUpdateOneInlineInput
  skillsList: ListUpdateOneInlineInput
  slug: String
  titleBlock: TitleBlockUpdateOneInlineInput
}

input CvPageUpdateLocalizationsInput {
  """Localizations to create"""
  create: [CvPageCreateLocalizationInput!]

  """Localizations to delete"""
  delete: [Locale!]
}

input CvPageUpdateManyInlineInput {
  """Connect multiple existing CvPage documents"""
  connect: [CvPageConnectInput!]

  """Create and connect multiple CvPage documents"""
  create: [CvPageCreateInput!]

  """Delete multiple CvPage documents"""
  delete: [CvPageWhereUniqueInput!]

  """Disconnect multiple CvPage documents"""
  disconnect: [CvPageWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing CvPage documents
  """
  set: [CvPageWhereUniqueInput!]

  """Update multiple CvPage documents"""
  update: [CvPageUpdateWithNestedWhereUniqueInput!]

  """Upsert multiple CvPage documents"""
  upsert: [CvPageUpsertWithNestedWhereUniqueInput!]
}

input CvPageUpdateManyInput {
  """No fields in updateMany data input"""
  _: String
}

input CvPageUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: CvPageUpdateManyInput!

  """Document search"""
  where: CvPageWhereInput!
}

input CvPageUpdateOneInlineInput {
  """Connect existing CvPage document"""
  connect: CvPageWhereUniqueInput

  """Create and connect one CvPage document"""
  create: CvPageCreateInput

  """Delete currently connected CvPage document"""
  delete: Boolean

  """Disconnect currently connected CvPage document"""
  disconnect: Boolean

  """Update single CvPage document"""
  update: CvPageUpdateWithNestedWhereUniqueInput

  """Upsert single CvPage document"""
  upsert: CvPageUpsertWithNestedWhereUniqueInput
}

input CvPageUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: CvPageUpdateInput!

  """Unique document search"""
  where: CvPageWhereUniqueInput!
}

input CvPageUpsertInput {
  """Create document if it didn't exist"""
  create: CvPageCreateInput!

  """Update document if it exists"""
  update: CvPageUpdateInput!
}

input CvPageUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: CvPageUpsertInput!

  """Unique document search"""
  where: CvPageWhereUniqueInput!
}

"""
This contains a set of filters that can be used to compare values internally
"""
input CvPageWhereComparatorInput {
  """
  This field can be used to request to check if the entry is outdated by internal comparison
  """
  outdated_to: Boolean
}

"""Identifies documents"""
input CvPageWhereInput {
  """Logical AND on all given filters."""
  AND: [CvPageWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CvPageWhereInput!]

  """Logical OR on all given filters."""
  OR: [CvPageWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: CvPageWhereStageInput
  documentInStages_none: CvPageWhereStageInput
  documentInStages_some: CvPageWhereStageInput
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  privateImageBlock: ImageBlockWhereInput
  profileImageBlock: ImageBlockWhereInput
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  skillsList: ListWhereInput
  slug: String

  """All values containing the given string."""
  slug_contains: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values that are contained in given list."""
  slug_in: [String]

  """All values that are not equal to given value."""
  slug_not: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values not ending with the given string"""
  slug_not_ends_with: String

  """All values that are not contained in given list."""
  slug_not_in: [String]

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values starting with the given string."""
  slug_starts_with: String
  titleBlock: TitleBlockWhereInput
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input CvPageWhereStageInput {
  """Logical AND on all given filters."""
  AND: [CvPageWhereStageInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CvPageWhereStageInput!]

  """Logical OR on all given filters."""
  OR: [CvPageWhereStageInput!]

  """
  This field contains fields which can be set as true or false to specify an internal comparison
  """
  compareWithParent: CvPageWhereComparatorInput

  """Specify the stage to compare with"""
  stage: Stage
}

"""References CvPage record uniquely"""
input CvPageWhereUniqueInput {
  id: ID
  slug: String
}

"""
A date string, such as 2007-12-03 (YYYY-MM-DD), compliant with ISO 8601 standard for representation of dates using the Gregorian calendar.
"""
scalar Date

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the date-timeformat outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representationof dates and times using the Gregorian calendar.
"""
scalar DateTime

enum DocumentFileTypes {
  doc
  docx
  html
  jpg
  odp
  ods
  odt
  pdf
  png
  ppt
  pptx
  svg
  txt
  webp
  xls
  xlsx
}

input DocumentOutputInput {
  """
  Transforms a document into a desired file type.
  See this matrix for format support:
  
  PDF:	jpg, odp, ods, odt, png, svg, txt, and webp
  DOC:	docx, html, jpg, odt, pdf, png, svg, txt, and webp
  DOCX:	doc, html, jpg, odt, pdf, png, svg, txt, and webp
  ODT:	doc, docx, html, jpg, pdf, png, svg, txt, and webp
  XLS:	jpg, pdf, ods, png, svg, xlsx, and webp
  XLSX:	jpg, pdf, ods, png, svg, xls, and webp
  ODS:	jpg, pdf, png, xls, svg, xlsx, and webp
  PPT:	jpg, odp, pdf, png, svg, pptx, and webp
  PPTX:	jpg, odp, pdf, png, svg, ppt, and webp
  ODP:	jpg, pdf, png, ppt, svg, pptx, and webp
  BMP:	jpg, odp, ods, odt, pdf, png, svg, and webp
  GIF:	jpg, odp, ods, odt, pdf, png, svg, and webp
  JPG:	jpg, odp, ods, odt, pdf, png, svg, and webp
  PNG:	jpg, odp, ods, odt, pdf, png, svg, and webp
  WEBP:	jpg, odp, ods, odt, pdf, png, svg, and webp
  TIFF:	jpg, odp, ods, odt, pdf, png, svg, and webp
  AI:	    jpg, odp, ods, odt, pdf, png, svg, and webp
  PSD:	jpg, odp, ods, odt, pdf, png, svg, and webp
  SVG:	jpg, odp, ods, odt, pdf, png, and webp
  HTML:	jpg, odt, pdf, svg, txt, and webp
  TXT:	jpg, html, odt, pdf, svg, and webp
  """
  format: DocumentFileTypes
}

"""Transformations for Documents"""
input DocumentTransformationInput {
  """Changes the output for the file."""
  output: DocumentOutputInput
}

type DocumentVersion {
  createdAt: DateTime!
  data: Json
  id: ID!
  revision: Int!
  stage: Stage!
}

scalar Hex

type ImageBlock {
  """The unique identifier"""
  id: ID!
  imageEntry(
    after: String
    before: String
    first: Int

    """
    Sets the locale of the parent document as the first locale in the fallback locales in the query's subtree.
    
    Note that `imageEntry` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `imageEntry` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    orderBy: ImageEntryOrderByInput
    skip: Int
    where: ImageEntryWhereInput
  ): [ImageEntry!]!

  """System Locale field"""
  locale: Locale!

  """Get the other localizations for this document"""
  localizations(
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false

    """
    Potential locales that should be returned. 
    
    The order of locales will also override locale fall-backing behaviour in the query's subtree.
    
    Note any related model with localized fields in the query's subtree will be affected.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    
    Consider using this in conjunction with forceParentLocale on the children relation fields.
    """
    locales: [Locale!]! = [en, nl]
  ): [ImageBlock!]!

  """System stage field"""
  stage: Stage!
  title: String
}

input ImageBlockConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: ImageBlockWhereUniqueInput!
}

"""A connection to a list of items."""
type ImageBlockConnection {
  aggregate: Aggregate!

  """A list of edges."""
  edges: [ImageBlockEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input ImageBlockCreateInput {
  imageEntry: ImageEntryCreateManyInlineInput

  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: ImageBlockCreateLocalizationsInput

  """title input for default locale (en)"""
  title: String
}

input ImageBlockCreateLocalizationDataInput {
  title: String
}

input ImageBlockCreateLocalizationInput {
  """Localization input"""
  data: ImageBlockCreateLocalizationDataInput!
  locale: Locale!
}

input ImageBlockCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [ImageBlockCreateLocalizationInput!]
}

input ImageBlockCreateManyInlineInput {
  """Create and connect multiple existing ImageBlock documents"""
  create: [ImageBlockCreateInput!]
}

input ImageBlockCreateOneInlineInput {
  """Create and connect one ImageBlock document"""
  create: ImageBlockCreateInput
}

input ImageBlockCreateWithPositionInput {
  """Document to create"""
  data: ImageBlockCreateInput!

  """
  Position in the list of existing component instances, will default to appending at the end of list
  """
  position: ConnectPositionInput
}

"""An edge in a connection."""
type ImageBlockEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: ImageBlock!
}

"""Identifies documents"""
input ImageBlockManyWhereInput {
  """Logical AND on all given filters."""
  AND: [ImageBlockWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ImageBlockWhereInput!]

  """Logical OR on all given filters."""
  OR: [ImageBlockWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  imageEntry_every: ImageEntryWhereInput
  imageEntry_none: ImageEntryWhereInput
  imageEntry_some: ImageEntryWhereInput
}

enum ImageBlockOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
}

union ImageBlockParent = CvPage

input ImageBlockParentConnectInput {
  CvPage: CvPageConnectInput
}

input ImageBlockParentCreateInput {
  CvPage: CvPageCreateInput
}

input ImageBlockParentCreateManyInlineInput {
  """Connect multiple existing ImageBlockParent documents"""
  connect: [ImageBlockParentWhereUniqueInput!]

  """Create and connect multiple existing ImageBlockParent documents"""
  create: [ImageBlockParentCreateInput!]
}

input ImageBlockParentCreateOneInlineInput {
  """Connect one existing ImageBlockParent document"""
  connect: ImageBlockParentWhereUniqueInput

  """Create and connect one ImageBlockParent document"""
  create: ImageBlockParentCreateInput
}

input ImageBlockParentUpdateInput {
  CvPage: CvPageUpdateInput
}

input ImageBlockParentUpdateManyInlineInput {
  """Connect multiple existing ImageBlockParent documents"""
  connect: [ImageBlockParentConnectInput!]

  """Create and connect multiple ImageBlockParent documents"""
  create: [ImageBlockParentCreateInput!]

  """Delete multiple ImageBlockParent documents"""
  delete: [ImageBlockParentWhereUniqueInput!]

  """Disconnect multiple ImageBlockParent documents"""
  disconnect: [ImageBlockParentWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing ImageBlockParent documents
  """
  set: [ImageBlockParentWhereUniqueInput!]

  """Update multiple ImageBlockParent documents"""
  update: [ImageBlockParentUpdateWithNestedWhereUniqueInput!]

  """Upsert multiple ImageBlockParent documents"""
  upsert: [ImageBlockParentUpsertWithNestedWhereUniqueInput!]
}

input ImageBlockParentUpdateManyWithNestedWhereInput {
  CvPage: CvPageUpdateManyWithNestedWhereInput
}

input ImageBlockParentUpdateOneInlineInput {
  """Connect existing ImageBlockParent document"""
  connect: ImageBlockParentWhereUniqueInput

  """Create and connect one ImageBlockParent document"""
  create: ImageBlockParentCreateInput

  """Delete currently connected ImageBlockParent document"""
  delete: Boolean

  """Disconnect currently connected ImageBlockParent document"""
  disconnect: Boolean

  """Update single ImageBlockParent document"""
  update: ImageBlockParentUpdateWithNestedWhereUniqueInput

  """Upsert single ImageBlockParent document"""
  upsert: ImageBlockParentUpsertWithNestedWhereUniqueInput
}

input ImageBlockParentUpdateWithNestedWhereUniqueInput {
  CvPage: CvPageUpdateWithNestedWhereUniqueInput
}

input ImageBlockParentUpsertWithNestedWhereUniqueInput {
  CvPage: CvPageUpsertWithNestedWhereUniqueInput
}

input ImageBlockParentWhereInput {
  CvPage: CvPageWhereInput
}

input ImageBlockParentWhereUniqueInput {
  CvPage: CvPageWhereUniqueInput
}

input ImageBlockUpdateInput {
  imageEntry: ImageEntryUpdateManyInlineInput

  """Manage document localizations"""
  localizations: ImageBlockUpdateLocalizationsInput

  """title input for default locale (en)"""
  title: String
}

input ImageBlockUpdateLocalizationDataInput {
  title: String
}

input ImageBlockUpdateLocalizationInput {
  data: ImageBlockUpdateLocalizationDataInput!
  locale: Locale!
}

input ImageBlockUpdateLocalizationsInput {
  """Localizations to create"""
  create: [ImageBlockCreateLocalizationInput!]

  """Localizations to delete"""
  delete: [Locale!]

  """Localizations to update"""
  update: [ImageBlockUpdateLocalizationInput!]
  upsert: [ImageBlockUpsertLocalizationInput!]
}

input ImageBlockUpdateManyInlineInput {
  """Create and connect multiple ImageBlock component instances"""
  create: [ImageBlockCreateWithPositionInput!]

  """Delete multiple ImageBlock documents"""
  delete: [ImageBlockWhereUniqueInput!]

  """Update multiple ImageBlock component instances"""
  update: [ImageBlockUpdateWithNestedWhereUniqueAndPositionInput!]

  """Upsert multiple ImageBlock component instances"""
  upsert: [ImageBlockUpsertWithNestedWhereUniqueAndPositionInput!]
}

input ImageBlockUpdateManyInput {
  """Optional updates to localizations"""
  localizations: ImageBlockUpdateManyLocalizationsInput

  """title input for default locale (en)"""
  title: String
}

input ImageBlockUpdateManyLocalizationDataInput {
  title: String
}

input ImageBlockUpdateManyLocalizationInput {
  data: ImageBlockUpdateManyLocalizationDataInput!
  locale: Locale!
}

input ImageBlockUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [ImageBlockUpdateManyLocalizationInput!]
}

input ImageBlockUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: ImageBlockUpdateManyInput!

  """Document search"""
  where: ImageBlockWhereInput!
}

input ImageBlockUpdateOneInlineInput {
  """Create and connect one ImageBlock document"""
  create: ImageBlockCreateInput

  """Delete currently connected ImageBlock document"""
  delete: Boolean

  """Update single ImageBlock document"""
  update: ImageBlockUpdateWithNestedWhereUniqueInput

  """Upsert single ImageBlock document"""
  upsert: ImageBlockUpsertWithNestedWhereUniqueInput
}

input ImageBlockUpdateWithNestedWhereUniqueAndPositionInput {
  """Document to update"""
  data: ImageBlockUpdateInput

  """
  Position in the list of existing component instances, will default to appending at the end of list
  """
  position: ConnectPositionInput

  """Unique component instance search"""
  where: ImageBlockWhereUniqueInput!
}

input ImageBlockUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: ImageBlockUpdateInput!

  """Unique document search"""
  where: ImageBlockWhereUniqueInput!
}

input ImageBlockUpsertInput {
  """Create document if it didn't exist"""
  create: ImageBlockCreateInput!

  """Update document if it exists"""
  update: ImageBlockUpdateInput!
}

input ImageBlockUpsertLocalizationInput {
  create: ImageBlockCreateLocalizationDataInput!
  locale: Locale!
  update: ImageBlockUpdateLocalizationDataInput!
}

input ImageBlockUpsertWithNestedWhereUniqueAndPositionInput {
  """Document to upsert"""
  data: ImageBlockUpsertInput

  """
  Position in the list of existing component instances, will default to appending at the end of list
  """
  position: ConnectPositionInput

  """Unique component instance search"""
  where: ImageBlockWhereUniqueInput!
}

input ImageBlockUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: ImageBlockUpsertInput!

  """Unique document search"""
  where: ImageBlockWhereUniqueInput!
}

"""Identifies documents"""
input ImageBlockWhereInput {
  """Logical AND on all given filters."""
  AND: [ImageBlockWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ImageBlockWhereInput!]

  """Logical OR on all given filters."""
  OR: [ImageBlockWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  imageEntry_every: ImageEntryWhereInput
  imageEntry_none: ImageEntryWhereInput
  imageEntry_some: ImageEntryWhereInput
  title: String

  """All values containing the given string."""
  title_contains: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values that are contained in given list."""
  title_in: [String]

  """All values that are not equal to given value."""
  title_not: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values not ending with the given string"""
  title_not_ends_with: String

  """All values that are not contained in given list."""
  title_not_in: [String]

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values starting with the given string."""
  title_starts_with: String
}

"""References ImageBlock record uniquely"""
input ImageBlockWhereUniqueInput {
  id: ID
}

"""Image with alt text for search engine optimization purposes."""
type ImageEntry {
  altText: String!

  """The unique identifier"""
  id: ID!
  identifier: String!
  image(
    """
    Sets the locale of the parent document as the first locale in the fallback locales in the query's subtree.
    
    Note that `image` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `image` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Asset!

  """System Locale field"""
  locale: Locale!

  """Get the other localizations for this document"""
  localizations(
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false

    """
    Potential locales that should be returned. 
    
    The order of locales will also override locale fall-backing behaviour in the query's subtree.
    
    Note any related model with localized fields in the query's subtree will be affected.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    
    Consider using this in conjunction with forceParentLocale on the children relation fields.
    """
    locales: [Locale!]! = [en, nl]
  ): [ImageEntry!]!

  """System stage field"""
  stage: Stage!
}

input ImageEntryConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: ImageEntryWhereUniqueInput!
}

"""A connection to a list of items."""
type ImageEntryConnection {
  aggregate: Aggregate!

  """A list of edges."""
  edges: [ImageEntryEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input ImageEntryCreateInput {
  """altText input for default locale (en)"""
  altText: String!
  identifier: String!
  image: AssetCreateOneInlineInput!

  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: ImageEntryCreateLocalizationsInput
}

input ImageEntryCreateLocalizationDataInput {
  altText: String!
}

input ImageEntryCreateLocalizationInput {
  """Localization input"""
  data: ImageEntryCreateLocalizationDataInput!
  locale: Locale!
}

input ImageEntryCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [ImageEntryCreateLocalizationInput!]
}

input ImageEntryCreateManyInlineInput {
  """Create and connect multiple existing ImageEntry documents"""
  create: [ImageEntryCreateInput!]
}

input ImageEntryCreateOneInlineInput {
  """Create and connect one ImageEntry document"""
  create: ImageEntryCreateInput
}

input ImageEntryCreateWithPositionInput {
  """Document to create"""
  data: ImageEntryCreateInput!

  """
  Position in the list of existing component instances, will default to appending at the end of list
  """
  position: ConnectPositionInput
}

"""An edge in a connection."""
type ImageEntryEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: ImageEntry!
}

"""Identifies documents"""
input ImageEntryManyWhereInput {
  """Logical AND on all given filters."""
  AND: [ImageEntryWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ImageEntryWhereInput!]

  """Logical OR on all given filters."""
  OR: [ImageEntryWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  identifier: String

  """All values containing the given string."""
  identifier_contains: String

  """All values ending with the given string."""
  identifier_ends_with: String

  """All values that are contained in given list."""
  identifier_in: [String]

  """All values that are not equal to given value."""
  identifier_not: String

  """All values not containing the given string."""
  identifier_not_contains: String

  """All values not ending with the given string"""
  identifier_not_ends_with: String

  """All values that are not contained in given list."""
  identifier_not_in: [String]

  """All values not starting with the given string."""
  identifier_not_starts_with: String

  """All values starting with the given string."""
  identifier_starts_with: String
  image: AssetWhereInput
}

enum ImageEntryOrderByInput {
  altText_ASC
  altText_DESC
  id_ASC
  id_DESC
  identifier_ASC
  identifier_DESC
}

union ImageEntryParent = ImageBlock

input ImageEntryParentConnectInput {
  ImageBlock: ImageBlockConnectInput
}

input ImageEntryParentCreateInput {
  ImageBlock: ImageBlockCreateInput
}

input ImageEntryParentCreateManyInlineInput {
  """Create and connect multiple existing ImageEntryParent documents"""
  create: [ImageEntryParentCreateInput!]
}

input ImageEntryParentCreateOneInlineInput {
  """Create and connect one ImageEntryParent document"""
  create: ImageEntryParentCreateInput
}

input ImageEntryParentCreateWithPositionInput {
  ImageBlock: ImageBlockCreateWithPositionInput
}

input ImageEntryParentUpdateInput {
  ImageBlock: ImageBlockUpdateInput
}

input ImageEntryParentUpdateManyInlineInput {
  """Create and connect multiple ImageEntryParent component instances"""
  create: [ImageEntryParentCreateWithPositionInput!]

  """Delete multiple ImageEntryParent documents"""
  delete: [ImageEntryParentWhereUniqueInput!]

  """Update multiple ImageEntryParent component instances"""
  update: [ImageEntryParentUpdateWithNestedWhereUniqueAndPositionInput!]

  """Upsert multiple ImageEntryParent component instances"""
  upsert: [ImageEntryParentUpsertWithNestedWhereUniqueAndPositionInput!]
}

input ImageEntryParentUpdateManyWithNestedWhereInput {
  ImageBlock: ImageBlockUpdateManyWithNestedWhereInput
}

input ImageEntryParentUpdateOneInlineInput {
  """Create and connect one ImageEntryParent document"""
  create: ImageEntryParentCreateInput

  """Delete currently connected ImageEntryParent document"""
  delete: Boolean

  """Update single ImageEntryParent document"""
  update: ImageEntryParentUpdateWithNestedWhereUniqueInput

  """Upsert single ImageEntryParent document"""
  upsert: ImageEntryParentUpsertWithNestedWhereUniqueInput
}

input ImageEntryParentUpdateWithNestedWhereUniqueAndPositionInput {
  ImageBlock: ImageBlockUpdateWithNestedWhereUniqueAndPositionInput
}

input ImageEntryParentUpdateWithNestedWhereUniqueInput {
  ImageBlock: ImageBlockUpdateWithNestedWhereUniqueInput
}

input ImageEntryParentUpsertWithNestedWhereUniqueAndPositionInput {
  ImageBlock: ImageBlockUpsertWithNestedWhereUniqueAndPositionInput
}

input ImageEntryParentUpsertWithNestedWhereUniqueInput {
  ImageBlock: ImageBlockUpsertWithNestedWhereUniqueInput
}

input ImageEntryParentWhereInput {
  ImageBlock: ImageBlockWhereInput
}

input ImageEntryParentWhereUniqueInput {
  ImageBlock: ImageBlockWhereUniqueInput
}

input ImageEntryUpdateInput {
  """altText input for default locale (en)"""
  altText: String
  identifier: String
  image: AssetUpdateOneInlineInput

  """Manage document localizations"""
  localizations: ImageEntryUpdateLocalizationsInput
}

input ImageEntryUpdateLocalizationDataInput {
  altText: String
}

input ImageEntryUpdateLocalizationInput {
  data: ImageEntryUpdateLocalizationDataInput!
  locale: Locale!
}

input ImageEntryUpdateLocalizationsInput {
  """Localizations to create"""
  create: [ImageEntryCreateLocalizationInput!]

  """Localizations to delete"""
  delete: [Locale!]

  """Localizations to update"""
  update: [ImageEntryUpdateLocalizationInput!]
  upsert: [ImageEntryUpsertLocalizationInput!]
}

input ImageEntryUpdateManyInlineInput {
  """Create and connect multiple ImageEntry component instances"""
  create: [ImageEntryCreateWithPositionInput!]

  """Delete multiple ImageEntry documents"""
  delete: [ImageEntryWhereUniqueInput!]

  """Update multiple ImageEntry component instances"""
  update: [ImageEntryUpdateWithNestedWhereUniqueAndPositionInput!]

  """Upsert multiple ImageEntry component instances"""
  upsert: [ImageEntryUpsertWithNestedWhereUniqueAndPositionInput!]
}

input ImageEntryUpdateManyInput {
  """No fields in updateMany data input"""
  _: String
}

input ImageEntryUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: ImageEntryUpdateManyInput!

  """Document search"""
  where: ImageEntryWhereInput!
}

input ImageEntryUpdateOneInlineInput {
  """Create and connect one ImageEntry document"""
  create: ImageEntryCreateInput

  """Delete currently connected ImageEntry document"""
  delete: Boolean

  """Update single ImageEntry document"""
  update: ImageEntryUpdateWithNestedWhereUniqueInput

  """Upsert single ImageEntry document"""
  upsert: ImageEntryUpsertWithNestedWhereUniqueInput
}

input ImageEntryUpdateWithNestedWhereUniqueAndPositionInput {
  """Document to update"""
  data: ImageEntryUpdateInput

  """
  Position in the list of existing component instances, will default to appending at the end of list
  """
  position: ConnectPositionInput

  """Unique component instance search"""
  where: ImageEntryWhereUniqueInput!
}

input ImageEntryUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: ImageEntryUpdateInput!

  """Unique document search"""
  where: ImageEntryWhereUniqueInput!
}

input ImageEntryUpsertInput {
  """Create document if it didn't exist"""
  create: ImageEntryCreateInput!

  """Update document if it exists"""
  update: ImageEntryUpdateInput!
}

input ImageEntryUpsertLocalizationInput {
  create: ImageEntryCreateLocalizationDataInput!
  locale: Locale!
  update: ImageEntryUpdateLocalizationDataInput!
}

input ImageEntryUpsertWithNestedWhereUniqueAndPositionInput {
  """Document to upsert"""
  data: ImageEntryUpsertInput

  """
  Position in the list of existing component instances, will default to appending at the end of list
  """
  position: ConnectPositionInput

  """Unique component instance search"""
  where: ImageEntryWhereUniqueInput!
}

input ImageEntryUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: ImageEntryUpsertInput!

  """Unique document search"""
  where: ImageEntryWhereUniqueInput!
}

"""Identifies documents"""
input ImageEntryWhereInput {
  """Logical AND on all given filters."""
  AND: [ImageEntryWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ImageEntryWhereInput!]

  """Logical OR on all given filters."""
  OR: [ImageEntryWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  altText: String

  """All values containing the given string."""
  altText_contains: String

  """All values ending with the given string."""
  altText_ends_with: String

  """All values that are contained in given list."""
  altText_in: [String]

  """All values that are not equal to given value."""
  altText_not: String

  """All values not containing the given string."""
  altText_not_contains: String

  """All values not ending with the given string"""
  altText_not_ends_with: String

  """All values that are not contained in given list."""
  altText_not_in: [String]

  """All values not starting with the given string."""
  altText_not_starts_with: String

  """All values starting with the given string."""
  altText_starts_with: String
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  identifier: String

  """All values containing the given string."""
  identifier_contains: String

  """All values ending with the given string."""
  identifier_ends_with: String

  """All values that are contained in given list."""
  identifier_in: [String]

  """All values that are not equal to given value."""
  identifier_not: String

  """All values not containing the given string."""
  identifier_not_contains: String

  """All values not ending with the given string"""
  identifier_not_ends_with: String

  """All values that are not contained in given list."""
  identifier_not_in: [String]

  """All values not starting with the given string."""
  identifier_not_starts_with: String

  """All values starting with the given string."""
  identifier_starts_with: String
  image: AssetWhereInput
}

"""References ImageEntry record uniquely"""
input ImageEntryWhereUniqueInput {
  id: ID
  identifier: String
}

enum ImageFit {
  """
  Resizes the image to fit within the specified parameters without distorting, cropping, or changing the aspect ratio.
  """
  clip

  """
  Resizes the image to fit the specified parameters exactly by removing any parts of the image that don't fit within the boundaries.
  """
  crop

  """
  Resizes the image to fit within the parameters, but as opposed to 'fit:clip' will not scale the image if the image is smaller than the output size.
  """
  max

  """
  Resizes the image to fit the specified parameters exactly by scaling the image to the desired size. The aspect ratio of the image is not respected and the image can be distorted using this method.
  """
  scale
}

input ImageResizeInput {
  """The default value for the fit parameter is fit:clip."""
  fit: ImageFit

  """
  The height in pixels to resize the image to. The value must be an integer from 1 to 10000.
  """
  height: Int

  """
  The width in pixels to resize the image to. The value must be an integer from 1 to 10000.
  """
  width: Int
}

"""Transformations for Images"""
input ImageTransformationInput {
  """Resizes the image"""
  resize: ImageResizeInput
}

"""Raw JSON value"""
scalar Json

type List {
  """The unique identifier"""
  id: ID!
  identifier: String!
  listEntry(
    after: String
    before: String
    first: Int

    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `listEntry` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `listEntry` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    orderBy: ListEntryOrderByInput
    skip: Int
    where: ListEntryWhereInput
  ): [ListEntry!]!

  """System stage field"""
  stage: Stage!
  title: String
}

input ListConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: ListWhereUniqueInput!
}

"""A connection to a list of items."""
type ListConnection {
  aggregate: Aggregate!

  """A list of edges."""
  edges: [ListEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input ListCreateInput {
  identifier: String!
  listEntry: ListEntryCreateManyInlineInput
  title: String
}

input ListCreateManyInlineInput {
  """Create and connect multiple existing List documents"""
  create: [ListCreateInput!]
}

input ListCreateOneInlineInput {
  """Create and connect one List document"""
  create: ListCreateInput
}

input ListCreateWithPositionInput {
  """Document to create"""
  data: ListCreateInput!

  """
  Position in the list of existing component instances, will default to appending at the end of list
  """
  position: ConnectPositionInput
}

"""An edge in a connection."""
type ListEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: List!
}

type ListEntry {
  """The unique identifier"""
  id: ID!
  identifier: String!

  """System stage field"""
  stage: Stage!
  title: String!
}

input ListEntryConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: ListEntryWhereUniqueInput!
}

"""A connection to a list of items."""
type ListEntryConnection {
  aggregate: Aggregate!

  """A list of edges."""
  edges: [ListEntryEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input ListEntryCreateInput {
  identifier: String!
  title: String!
}

input ListEntryCreateManyInlineInput {
  """Create and connect multiple existing ListEntry documents"""
  create: [ListEntryCreateInput!]
}

input ListEntryCreateOneInlineInput {
  """Create and connect one ListEntry document"""
  create: ListEntryCreateInput
}

input ListEntryCreateWithPositionInput {
  """Document to create"""
  data: ListEntryCreateInput!

  """
  Position in the list of existing component instances, will default to appending at the end of list
  """
  position: ConnectPositionInput
}

"""An edge in a connection."""
type ListEntryEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: ListEntry!
}

"""Identifies documents"""
input ListEntryManyWhereInput {
  """Logical AND on all given filters."""
  AND: [ListEntryWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ListEntryWhereInput!]

  """Logical OR on all given filters."""
  OR: [ListEntryWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  identifier: String

  """All values containing the given string."""
  identifier_contains: String

  """All values ending with the given string."""
  identifier_ends_with: String

  """All values that are contained in given list."""
  identifier_in: [String]

  """All values that are not equal to given value."""
  identifier_not: String

  """All values not containing the given string."""
  identifier_not_contains: String

  """All values not ending with the given string"""
  identifier_not_ends_with: String

  """All values that are not contained in given list."""
  identifier_not_in: [String]

  """All values not starting with the given string."""
  identifier_not_starts_with: String

  """All values starting with the given string."""
  identifier_starts_with: String
  title: String

  """All values containing the given string."""
  title_contains: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values that are contained in given list."""
  title_in: [String]

  """All values that are not equal to given value."""
  title_not: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values not ending with the given string"""
  title_not_ends_with: String

  """All values that are not contained in given list."""
  title_not_in: [String]

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values starting with the given string."""
  title_starts_with: String
}

enum ListEntryOrderByInput {
  id_ASC
  id_DESC
  identifier_ASC
  identifier_DESC
  title_ASC
  title_DESC
}

union ListEntryParent = List

input ListEntryParentConnectInput {
  List: ListConnectInput
}

input ListEntryParentCreateInput {
  List: ListCreateInput
}

input ListEntryParentCreateManyInlineInput {
  """Create and connect multiple existing ListEntryParent documents"""
  create: [ListEntryParentCreateInput!]
}

input ListEntryParentCreateOneInlineInput {
  """Create and connect one ListEntryParent document"""
  create: ListEntryParentCreateInput
}

input ListEntryParentCreateWithPositionInput {
  List: ListCreateWithPositionInput
}

input ListEntryParentUpdateInput {
  List: ListUpdateInput
}

input ListEntryParentUpdateManyInlineInput {
  """Create and connect multiple ListEntryParent component instances"""
  create: [ListEntryParentCreateWithPositionInput!]

  """Delete multiple ListEntryParent documents"""
  delete: [ListEntryParentWhereUniqueInput!]

  """Update multiple ListEntryParent component instances"""
  update: [ListEntryParentUpdateWithNestedWhereUniqueAndPositionInput!]

  """Upsert multiple ListEntryParent component instances"""
  upsert: [ListEntryParentUpsertWithNestedWhereUniqueAndPositionInput!]
}

input ListEntryParentUpdateManyWithNestedWhereInput {
  List: ListUpdateManyWithNestedWhereInput
}

input ListEntryParentUpdateOneInlineInput {
  """Create and connect one ListEntryParent document"""
  create: ListEntryParentCreateInput

  """Delete currently connected ListEntryParent document"""
  delete: Boolean

  """Update single ListEntryParent document"""
  update: ListEntryParentUpdateWithNestedWhereUniqueInput

  """Upsert single ListEntryParent document"""
  upsert: ListEntryParentUpsertWithNestedWhereUniqueInput
}

input ListEntryParentUpdateWithNestedWhereUniqueAndPositionInput {
  List: ListUpdateWithNestedWhereUniqueAndPositionInput
}

input ListEntryParentUpdateWithNestedWhereUniqueInput {
  List: ListUpdateWithNestedWhereUniqueInput
}

input ListEntryParentUpsertWithNestedWhereUniqueAndPositionInput {
  List: ListUpsertWithNestedWhereUniqueAndPositionInput
}

input ListEntryParentUpsertWithNestedWhereUniqueInput {
  List: ListUpsertWithNestedWhereUniqueInput
}

input ListEntryParentWhereInput {
  List: ListWhereInput
}

input ListEntryParentWhereUniqueInput {
  List: ListWhereUniqueInput
}

input ListEntryUpdateInput {
  identifier: String
  title: String
}

input ListEntryUpdateManyInlineInput {
  """Create and connect multiple ListEntry component instances"""
  create: [ListEntryCreateWithPositionInput!]

  """Delete multiple ListEntry documents"""
  delete: [ListEntryWhereUniqueInput!]

  """Update multiple ListEntry component instances"""
  update: [ListEntryUpdateWithNestedWhereUniqueAndPositionInput!]

  """Upsert multiple ListEntry component instances"""
  upsert: [ListEntryUpsertWithNestedWhereUniqueAndPositionInput!]
}

input ListEntryUpdateManyInput {
  title: String
}

input ListEntryUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: ListEntryUpdateManyInput!

  """Document search"""
  where: ListEntryWhereInput!
}

input ListEntryUpdateOneInlineInput {
  """Create and connect one ListEntry document"""
  create: ListEntryCreateInput

  """Delete currently connected ListEntry document"""
  delete: Boolean

  """Update single ListEntry document"""
  update: ListEntryUpdateWithNestedWhereUniqueInput

  """Upsert single ListEntry document"""
  upsert: ListEntryUpsertWithNestedWhereUniqueInput
}

input ListEntryUpdateWithNestedWhereUniqueAndPositionInput {
  """Document to update"""
  data: ListEntryUpdateInput

  """
  Position in the list of existing component instances, will default to appending at the end of list
  """
  position: ConnectPositionInput

  """Unique component instance search"""
  where: ListEntryWhereUniqueInput!
}

input ListEntryUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: ListEntryUpdateInput!

  """Unique document search"""
  where: ListEntryWhereUniqueInput!
}

input ListEntryUpsertInput {
  """Create document if it didn't exist"""
  create: ListEntryCreateInput!

  """Update document if it exists"""
  update: ListEntryUpdateInput!
}

input ListEntryUpsertWithNestedWhereUniqueAndPositionInput {
  """Document to upsert"""
  data: ListEntryUpsertInput

  """
  Position in the list of existing component instances, will default to appending at the end of list
  """
  position: ConnectPositionInput

  """Unique component instance search"""
  where: ListEntryWhereUniqueInput!
}

input ListEntryUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: ListEntryUpsertInput!

  """Unique document search"""
  where: ListEntryWhereUniqueInput!
}

"""Identifies documents"""
input ListEntryWhereInput {
  """Logical AND on all given filters."""
  AND: [ListEntryWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ListEntryWhereInput!]

  """Logical OR on all given filters."""
  OR: [ListEntryWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  identifier: String

  """All values containing the given string."""
  identifier_contains: String

  """All values ending with the given string."""
  identifier_ends_with: String

  """All values that are contained in given list."""
  identifier_in: [String]

  """All values that are not equal to given value."""
  identifier_not: String

  """All values not containing the given string."""
  identifier_not_contains: String

  """All values not ending with the given string"""
  identifier_not_ends_with: String

  """All values that are not contained in given list."""
  identifier_not_in: [String]

  """All values not starting with the given string."""
  identifier_not_starts_with: String

  """All values starting with the given string."""
  identifier_starts_with: String
  title: String

  """All values containing the given string."""
  title_contains: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values that are contained in given list."""
  title_in: [String]

  """All values that are not equal to given value."""
  title_not: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values not ending with the given string"""
  title_not_ends_with: String

  """All values that are not contained in given list."""
  title_not_in: [String]

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values starting with the given string."""
  title_starts_with: String
}

"""References ListEntry record uniquely"""
input ListEntryWhereUniqueInput {
  id: ID
  identifier: String
}

"""Identifies documents"""
input ListManyWhereInput {
  """Logical AND on all given filters."""
  AND: [ListWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ListWhereInput!]

  """Logical OR on all given filters."""
  OR: [ListWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  identifier: String

  """All values containing the given string."""
  identifier_contains: String

  """All values ending with the given string."""
  identifier_ends_with: String

  """All values that are contained in given list."""
  identifier_in: [String]

  """All values that are not equal to given value."""
  identifier_not: String

  """All values not containing the given string."""
  identifier_not_contains: String

  """All values not ending with the given string"""
  identifier_not_ends_with: String

  """All values that are not contained in given list."""
  identifier_not_in: [String]

  """All values not starting with the given string."""
  identifier_not_starts_with: String

  """All values starting with the given string."""
  identifier_starts_with: String
  listEntry_every: ListEntryWhereInput
  listEntry_none: ListEntryWhereInput
  listEntry_some: ListEntryWhereInput
  title: String

  """All values containing the given string."""
  title_contains: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values that are contained in given list."""
  title_in: [String]

  """All values that are not equal to given value."""
  title_not: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values not ending with the given string"""
  title_not_ends_with: String

  """All values that are not contained in given list."""
  title_not_in: [String]

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values starting with the given string."""
  title_starts_with: String
}

enum ListOrderByInput {
  id_ASC
  id_DESC
  identifier_ASC
  identifier_DESC
  title_ASC
  title_DESC
}

union ListParent = CvPage

input ListParentConnectInput {
  CvPage: CvPageConnectInput
}

input ListParentCreateInput {
  CvPage: CvPageCreateInput
}

input ListParentCreateManyInlineInput {
  """Connect multiple existing ListParent documents"""
  connect: [ListParentWhereUniqueInput!]

  """Create and connect multiple existing ListParent documents"""
  create: [ListParentCreateInput!]
}

input ListParentCreateOneInlineInput {
  """Connect one existing ListParent document"""
  connect: ListParentWhereUniqueInput

  """Create and connect one ListParent document"""
  create: ListParentCreateInput
}

input ListParentUpdateInput {
  CvPage: CvPageUpdateInput
}

input ListParentUpdateManyInlineInput {
  """Connect multiple existing ListParent documents"""
  connect: [ListParentConnectInput!]

  """Create and connect multiple ListParent documents"""
  create: [ListParentCreateInput!]

  """Delete multiple ListParent documents"""
  delete: [ListParentWhereUniqueInput!]

  """Disconnect multiple ListParent documents"""
  disconnect: [ListParentWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing ListParent documents
  """
  set: [ListParentWhereUniqueInput!]

  """Update multiple ListParent documents"""
  update: [ListParentUpdateWithNestedWhereUniqueInput!]

  """Upsert multiple ListParent documents"""
  upsert: [ListParentUpsertWithNestedWhereUniqueInput!]
}

input ListParentUpdateManyWithNestedWhereInput {
  CvPage: CvPageUpdateManyWithNestedWhereInput
}

input ListParentUpdateOneInlineInput {
  """Connect existing ListParent document"""
  connect: ListParentWhereUniqueInput

  """Create and connect one ListParent document"""
  create: ListParentCreateInput

  """Delete currently connected ListParent document"""
  delete: Boolean

  """Disconnect currently connected ListParent document"""
  disconnect: Boolean

  """Update single ListParent document"""
  update: ListParentUpdateWithNestedWhereUniqueInput

  """Upsert single ListParent document"""
  upsert: ListParentUpsertWithNestedWhereUniqueInput
}

input ListParentUpdateWithNestedWhereUniqueInput {
  CvPage: CvPageUpdateWithNestedWhereUniqueInput
}

input ListParentUpsertWithNestedWhereUniqueInput {
  CvPage: CvPageUpsertWithNestedWhereUniqueInput
}

input ListParentWhereInput {
  CvPage: CvPageWhereInput
}

input ListParentWhereUniqueInput {
  CvPage: CvPageWhereUniqueInput
}

input ListUpdateInput {
  identifier: String
  listEntry: ListEntryUpdateManyInlineInput
  title: String
}

input ListUpdateManyInlineInput {
  """Create and connect multiple List component instances"""
  create: [ListCreateWithPositionInput!]

  """Delete multiple List documents"""
  delete: [ListWhereUniqueInput!]

  """Update multiple List component instances"""
  update: [ListUpdateWithNestedWhereUniqueAndPositionInput!]

  """Upsert multiple List component instances"""
  upsert: [ListUpsertWithNestedWhereUniqueAndPositionInput!]
}

input ListUpdateManyInput {
  title: String
}

input ListUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: ListUpdateManyInput!

  """Document search"""
  where: ListWhereInput!
}

input ListUpdateOneInlineInput {
  """Create and connect one List document"""
  create: ListCreateInput

  """Delete currently connected List document"""
  delete: Boolean

  """Update single List document"""
  update: ListUpdateWithNestedWhereUniqueInput

  """Upsert single List document"""
  upsert: ListUpsertWithNestedWhereUniqueInput
}

input ListUpdateWithNestedWhereUniqueAndPositionInput {
  """Document to update"""
  data: ListUpdateInput

  """
  Position in the list of existing component instances, will default to appending at the end of list
  """
  position: ConnectPositionInput

  """Unique component instance search"""
  where: ListWhereUniqueInput!
}

input ListUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: ListUpdateInput!

  """Unique document search"""
  where: ListWhereUniqueInput!
}

input ListUpsertInput {
  """Create document if it didn't exist"""
  create: ListCreateInput!

  """Update document if it exists"""
  update: ListUpdateInput!
}

input ListUpsertWithNestedWhereUniqueAndPositionInput {
  """Document to upsert"""
  data: ListUpsertInput

  """
  Position in the list of existing component instances, will default to appending at the end of list
  """
  position: ConnectPositionInput

  """Unique component instance search"""
  where: ListWhereUniqueInput!
}

input ListUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: ListUpsertInput!

  """Unique document search"""
  where: ListWhereUniqueInput!
}

"""Identifies documents"""
input ListWhereInput {
  """Logical AND on all given filters."""
  AND: [ListWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ListWhereInput!]

  """Logical OR on all given filters."""
  OR: [ListWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  identifier: String

  """All values containing the given string."""
  identifier_contains: String

  """All values ending with the given string."""
  identifier_ends_with: String

  """All values that are contained in given list."""
  identifier_in: [String]

  """All values that are not equal to given value."""
  identifier_not: String

  """All values not containing the given string."""
  identifier_not_contains: String

  """All values not ending with the given string"""
  identifier_not_ends_with: String

  """All values that are not contained in given list."""
  identifier_not_in: [String]

  """All values not starting with the given string."""
  identifier_not_starts_with: String

  """All values starting with the given string."""
  identifier_starts_with: String
  listEntry_every: ListEntryWhereInput
  listEntry_none: ListEntryWhereInput
  listEntry_some: ListEntryWhereInput
  title: String

  """All values containing the given string."""
  title_contains: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values that are contained in given list."""
  title_in: [String]

  """All values that are not equal to given value."""
  title_not: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values not ending with the given string"""
  title_not_ends_with: String

  """All values that are not contained in given list."""
  title_not_in: [String]

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values starting with the given string."""
  title_starts_with: String
}

"""References List record uniquely"""
input ListWhereUniqueInput {
  id: ID
  identifier: String
}

"""Locale system enumeration"""
enum Locale {
  """System locale"""
  en
  nl
}

"""Representing a geolocation point with latitude and longitude"""
type Location {
  distance(from: LocationInput!): Float!
  latitude: Float!
  longitude: Float!
}

"""Input for a geolocation point with latitude and longitude"""
input LocationInput {
  latitude: Float!
  longitude: Float!
}

"""
The Long scalar type represents non-fractional signed whole numeric values. Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  """Create one asset"""
  createAsset(data: AssetCreateInput!): Asset @deprecated(reason: "Asset mutations will be overhauled soon")

  """Create one cvPage"""
  createCvPage(data: CvPageCreateInput!): CvPage

  """Create one scheduledRelease"""
  createScheduledRelease(data: ScheduledReleaseCreateInput!): ScheduledRelease

  """Delete one asset from _all_ existing stages. Returns deleted document."""
  deleteAsset(
    """Document to delete"""
    where: AssetWhereUniqueInput!
  ): Asset

  """
  Delete one cvPage from _all_ existing stages. Returns deleted document.
  """
  deleteCvPage(
    """Document to delete"""
    where: CvPageWhereUniqueInput!
  ): CvPage

  """Delete many Asset documents"""
  deleteManyAssets(
    """Documents to delete"""
    where: AssetManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyAssetsConnection)")

  """Delete many Asset documents, return deleted documents"""
  deleteManyAssetsConnection(
    after: ID
    before: ID
    first: Int
    last: Int
    skip: Int

    """Documents to delete"""
    where: AssetManyWhereInput
  ): AssetConnection!

  """Delete many CvPage documents"""
  deleteManyCvPages(
    """Documents to delete"""
    where: CvPageManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyCvPagesConnection)")

  """Delete many CvPage documents, return deleted documents"""
  deleteManyCvPagesConnection(
    after: ID
    before: ID
    first: Int
    last: Int
    skip: Int

    """Documents to delete"""
    where: CvPageManyWhereInput
  ): CvPageConnection!

  """Delete and return scheduled operation"""
  deleteScheduledOperation(
    """Document to delete"""
    where: ScheduledOperationWhereUniqueInput!
  ): ScheduledOperation

  """
  Delete one scheduledRelease from _all_ existing stages. Returns deleted document.
  """
  deleteScheduledRelease(
    """Document to delete"""
    where: ScheduledReleaseWhereUniqueInput!
  ): ScheduledRelease

  """Publish one asset"""
  publishAsset(
    """Optional localizations to publish"""
    locales: [Locale!]

    """Whether to publish the base document"""
    publishBase: Boolean = true

    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: AssetWhereUniqueInput!

    """Whether to include the default locale when publishBase is set"""
    withDefaultLocale: Boolean = true
  ): Asset

  """Publish one cvPage"""
  publishCvPage(
    """Optional localizations to publish"""
    locales: [Locale!]

    """Whether to publish the base document"""
    publishBase: Boolean = true

    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: CvPageWhereUniqueInput!

    """Whether to include the default locale when publishBase is set"""
    withDefaultLocale: Boolean = true
  ): CvPage

  """Publish many Asset documents"""
  publishManyAssets(
    """Document localizations to publish"""
    locales: [Locale!]

    """Whether to publish the base document"""
    publishBase: Boolean = true

    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: AssetManyWhereInput

    """Whether to include the default locale when publishBase is true"""
    withDefaultLocale: Boolean = true
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyAssetsConnection)")

  """Publish many Asset documents"""
  publishManyAssetsConnection(
    after: ID
    before: ID
    first: Int

    """Stage to find matching documents in"""
    from: Stage = DRAFT
    last: Int

    """Document localizations to publish"""
    locales: [Locale!]

    """Whether to publish the base document"""
    publishBase: Boolean = true
    skip: Int

    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: AssetManyWhereInput

    """Whether to include the default locale when publishBase is true"""
    withDefaultLocale: Boolean = true
  ): AssetConnection!

  """Publish many CvPage documents"""
  publishManyCvPages(
    """Document localizations to publish"""
    locales: [Locale!]

    """Whether to publish the base document"""
    publishBase: Boolean = true

    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: CvPageManyWhereInput

    """Whether to include the default locale when publishBase is true"""
    withDefaultLocale: Boolean = true
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyCvPagesConnection)")

  """Publish many CvPage documents"""
  publishManyCvPagesConnection(
    after: ID
    before: ID
    first: Int

    """Stage to find matching documents in"""
    from: Stage = DRAFT
    last: Int

    """Document localizations to publish"""
    locales: [Locale!]

    """Whether to publish the base document"""
    publishBase: Boolean = true
    skip: Int

    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: CvPageManyWhereInput

    """Whether to include the default locale when publishBase is true"""
    withDefaultLocale: Boolean = true
  ): CvPageConnection!

  """Schedule to publish one asset"""
  schedulePublishAsset(
    """Optional localizations to publish"""
    locales: [Locale!]

    """Whether to publish the base document"""
    publishBase: Boolean = true

    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: AssetWhereUniqueInput!

    """Whether to include the default locale when publishBase is set"""
    withDefaultLocale: Boolean = true
  ): Asset

  """Schedule to publish one cvPage"""
  schedulePublishCvPage(
    """Optional localizations to publish"""
    locales: [Locale!]

    """Whether to publish the base document"""
    publishBase: Boolean = true

    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: CvPageWhereUniqueInput!

    """Whether to include the default locale when publishBase is set"""
    withDefaultLocale: Boolean = true
  ): CvPage

  """
  Unpublish one asset from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishAsset(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]

    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true

    """Document to unpublish"""
    where: AssetWhereUniqueInput!
  ): Asset

  """
  Unpublish one cvPage from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishCvPage(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]

    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true

    """Document to unpublish"""
    where: CvPageWhereUniqueInput!
  ): CvPage

  """
  Unpublish one asset from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishAsset(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]

    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true

    """Document to unpublish"""
    where: AssetWhereUniqueInput!
  ): Asset

  """
  Unpublish one cvPage from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishCvPage(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]

    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true

    """Document to unpublish"""
    where: CvPageWhereUniqueInput!
  ): CvPage

  """Unpublish many Asset documents"""
  unpublishManyAssets(
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]

    """Locales to unpublish"""
    locales: [Locale!]

    """Whether to unpublish the base document and default localization"""
    unpublishBase: Boolean = true

    """Identifies documents in each stage"""
    where: AssetManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyAssetsConnection)")

  """
  Find many Asset documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyAssetsConnection(
    after: ID
    before: ID
    first: Int

    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    last: Int

    """Locales to unpublish"""
    locales: [Locale!]
    skip: Int

    """Stage to find matching documents in"""
    stage: Stage = DRAFT

    """Whether to unpublish the base document and default localization"""
    unpublishBase: Boolean = true

    """Identifies documents in draft stage"""
    where: AssetManyWhereInput
  ): AssetConnection!

  """Unpublish many CvPage documents"""
  unpublishManyCvPages(
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]

    """Locales to unpublish"""
    locales: [Locale!]

    """Whether to unpublish the base document and default localization"""
    unpublishBase: Boolean = true

    """Identifies documents in each stage"""
    where: CvPageManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyCvPagesConnection)")

  """
  Find many CvPage documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyCvPagesConnection(
    after: ID
    before: ID
    first: Int

    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    last: Int

    """Locales to unpublish"""
    locales: [Locale!]
    skip: Int

    """Stage to find matching documents in"""
    stage: Stage = DRAFT

    """Whether to unpublish the base document and default localization"""
    unpublishBase: Boolean = true

    """Identifies documents in draft stage"""
    where: CvPageManyWhereInput
  ): CvPageConnection!

  """Update one asset"""
  updateAsset(data: AssetUpdateInput!, where: AssetWhereUniqueInput!): Asset

  """Update one cvPage"""
  updateCvPage(data: CvPageUpdateInput!, where: CvPageWhereUniqueInput!): CvPage

  """Update many assets"""
  updateManyAssets(
    """Updates to document content"""
    data: AssetUpdateManyInput!

    """Documents to apply update on"""
    where: AssetManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyAssetsConnection)")

  """Update many Asset documents"""
  updateManyAssetsConnection(
    after: ID
    before: ID

    """Updates to document content"""
    data: AssetUpdateManyInput!
    first: Int
    last: Int
    skip: Int

    """Documents to apply update on"""
    where: AssetManyWhereInput
  ): AssetConnection!

  """Update many cvPages"""
  updateManyCvPages(
    """Updates to document content"""
    data: CvPageUpdateManyInput!

    """Documents to apply update on"""
    where: CvPageManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyCvPagesConnection)")

  """Update many CvPage documents"""
  updateManyCvPagesConnection(
    after: ID
    before: ID

    """Updates to document content"""
    data: CvPageUpdateManyInput!
    first: Int
    last: Int
    skip: Int

    """Documents to apply update on"""
    where: CvPageManyWhereInput
  ): CvPageConnection!

  """Update one scheduledRelease"""
  updateScheduledRelease(data: ScheduledReleaseUpdateInput!, where: ScheduledReleaseWhereUniqueInput!): ScheduledRelease

  """Upsert one asset"""
  upsertAsset(upsert: AssetUpsertInput!, where: AssetWhereUniqueInput!): Asset

  """Upsert one cvPage"""
  upsertCvPage(upsert: CvPageUpsertInput!, where: CvPageWhereUniqueInput!): CvPage
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!

  """The Stage of an object"""
  stage: Stage!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, the cursor to continue."""
  endCursor: String

  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """Number of items in the current page."""
  pageSize: Int

  """When paginating backwards, the cursor to continue."""
  startCursor: String
}

input PublishLocaleInput {
  """Locales to publish"""
  locale: Locale!

  """Stages to publish selected locales to"""
  stages: [Stage!]!
}

type Query {
  """Retrieve a single asset"""
  asset(
    """
    Defines which locales should be returned.
    
    Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: AssetWhereUniqueInput!
  ): Asset

  """Retrieve document version"""
  assetVersion(where: VersionWhereInput!): DocumentVersion

  """Retrieve multiple assets"""
  assets(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: AssetOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: AssetWhereInput
  ): [Asset!]!

  """Retrieve multiple assets using the Relay connection interface"""
  assetsConnection(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: AssetOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: AssetWhereInput
  ): AssetConnection!

  """Retrieve a single cvPage"""
  cvPage(
    """
    Defines which locales should be returned.
    
    Note that `CvPage` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: CvPageWhereUniqueInput!
  ): CvPage

  """Retrieve document version"""
  cvPageVersion(where: VersionWhereInput!): DocumentVersion

  """Retrieve multiple cvPages"""
  cvPages(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `CvPage` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: CvPageOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: CvPageWhereInput
  ): [CvPage!]!

  """Retrieve multiple cvPages using the Relay connection interface"""
  cvPagesConnection(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `CvPage` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: CvPageOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: CvPageWhereInput
  ): CvPageConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!

    """
    Defines which locales should be returned.
    
    Note that `Node` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
  ): Node

  """Retrieve a single scheduledOperation"""
  scheduledOperation(
    """
    Defines which locales should be returned.
    
    Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: ScheduledOperationWhereUniqueInput!
  ): ScheduledOperation

  """Retrieve multiple scheduledOperations"""
  scheduledOperations(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ScheduledOperationOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """
  Retrieve multiple scheduledOperations using the Relay connection interface
  """
  scheduledOperationsConnection(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ScheduledOperationOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ScheduledOperationWhereInput
  ): ScheduledOperationConnection!

  """Retrieve a single scheduledRelease"""
  scheduledRelease(
    """
    Defines which locales should be returned.
    
    Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: ScheduledReleaseWhereUniqueInput!
  ): ScheduledRelease

  """Retrieve multiple scheduledReleases"""
  scheduledReleases(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ScheduledReleaseOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ScheduledReleaseWhereInput
  ): [ScheduledRelease!]!

  """
  Retrieve multiple scheduledReleases using the Relay connection interface
  """
  scheduledReleasesConnection(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ScheduledReleaseOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ScheduledReleaseWhereInput
  ): ScheduledReleaseConnection!

  """Retrieve a single user"""
  user(
    """
    Defines which locales should be returned.
    
    Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: UserWhereUniqueInput!
  ): User

  """Retrieve multiple users"""
  users(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: UserOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: UserWhereInput
  ): [User!]!

  """Retrieve multiple users using the Relay connection interface"""
  usersConnection(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: UserOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: UserWhereInput
  ): UserConnection!
}

"""
Representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba()
"""
type RGBA {
  a: RGBATransparency!
  b: RGBAHue!
  g: RGBAHue!
  r: RGBAHue!
}

scalar RGBAHue

"""
Input type representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba()
"""
input RGBAInput {
  a: RGBATransparency!
  b: RGBAHue!
  g: RGBAHue!
  r: RGBAHue!
}

scalar RGBATransparency

"""
Custom type representing a rich text value comprising of raw rich text ast, html, markdown and text values
"""
type RichText {
  """Returns HTMl representation"""
  html: String!

  """Returns Markdown representation"""
  markdown: String!

  """Returns AST representation"""
  raw: RichTextAST!

  """Returns plain-text contents of RichText"""
  text: String!
}

"""Slate-compatible RichText AST"""
scalar RichTextAST

"""Scheduled Operation system model"""
type ScheduledOperation implements Node {
  affectedDocuments(
    after: String
    before: String
    first: Int

    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `affectedDocuments` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `affectedDocuments` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    skip: Int
  ): [ScheduledOperationAffectedDocument!]!

  """The time the document was created"""
  createdAt: DateTime!

  """User that created this document"""
  createdBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """Operation description"""
  description: String

  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """Potential stages that should be returned"""
    stages: [Stage!]! = [PUBLISHED, DRAFT]
  ): [ScheduledOperation!]!

  """Operation error message"""
  errorMessage: String

  """The unique identifier"""
  id: ID!

  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime

  """User that last published this document"""
  publishedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """
  Raw operation payload including all details, this field is subject to change
  """
  rawPayload: Json!

  """The release this operation is scheduled for"""
  release(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `release` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `release` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): ScheduledRelease

  """System stage field"""
  stage: Stage!

  """operation Status"""
  status: ScheduledOperationStatus!

  """The time the document was updated"""
  updatedAt: DateTime!

  """User that last updated this document"""
  updatedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

union ScheduledOperationAffectedDocument = Asset | CvPage

input ScheduledOperationConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: ScheduledOperationWhereUniqueInput!
}

"""A connection to a list of items."""
type ScheduledOperationConnection {
  aggregate: Aggregate!

  """A list of edges."""
  edges: [ScheduledOperationEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input ScheduledOperationCreateManyInlineInput {
  """Connect multiple existing ScheduledOperation documents"""
  connect: [ScheduledOperationWhereUniqueInput!]
}

input ScheduledOperationCreateOneInlineInput {
  """Connect one existing ScheduledOperation document"""
  connect: ScheduledOperationWhereUniqueInput
}

"""An edge in a connection."""
type ScheduledOperationEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: ScheduledOperation!
}

"""Identifies documents"""
input ScheduledOperationManyWhereInput {
  """Logical AND on all given filters."""
  AND: [ScheduledOperationWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ScheduledOperationWhereInput!]

  """Logical OR on all given filters."""
  OR: [ScheduledOperationWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  description: String

  """All values containing the given string."""
  description_contains: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values that are contained in given list."""
  description_in: [String]

  """All values that are not equal to given value."""
  description_not: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values not ending with the given string"""
  description_not_ends_with: String

  """All values that are not contained in given list."""
  description_not_in: [String]

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values starting with the given string."""
  description_starts_with: String
  errorMessage: String

  """All values containing the given string."""
  errorMessage_contains: String

  """All values ending with the given string."""
  errorMessage_ends_with: String

  """All values that are contained in given list."""
  errorMessage_in: [String]

  """All values that are not equal to given value."""
  errorMessage_not: String

  """All values not containing the given string."""
  errorMessage_not_contains: String

  """All values not ending with the given string"""
  errorMessage_not_ends_with: String

  """All values that are not contained in given list."""
  errorMessage_not_in: [String]

  """All values not starting with the given string."""
  errorMessage_not_starts_with: String

  """All values starting with the given string."""
  errorMessage_starts_with: String
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput

  """All values containing the given json path."""
  rawPayload_json_path_exists: String

  """
  Recursively tries to find the provided JSON scalar value inside the field.
  It does use an exact match when comparing values.
  If you pass `null` as value the filter will be ignored. 
  Note: This filter fails if you try to look for a non scalar JSON value!
  """
  rawPayload_value_recursive: Json
  release: ScheduledReleaseWhereInput
  status: ScheduledOperationStatus

  """All values that are contained in given list."""
  status_in: [ScheduledOperationStatus]

  """All values that are not equal to given value."""
  status_not: ScheduledOperationStatus

  """All values that are not contained in given list."""
  status_not_in: [ScheduledOperationStatus]
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

enum ScheduledOperationOrderByInput {
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  errorMessage_ASC
  errorMessage_DESC
  id_ASC
  id_DESC
  publishedAt_ASC
  publishedAt_DESC
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""System Scheduled Operation Status"""
enum ScheduledOperationStatus {
  CANCELED
  COMPLETED
  FAILED
  IN_PROGRESS
  PENDING
}

input ScheduledOperationUpdateManyInlineInput {
  """Connect multiple existing ScheduledOperation documents"""
  connect: [ScheduledOperationConnectInput!]

  """Disconnect multiple ScheduledOperation documents"""
  disconnect: [ScheduledOperationWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing ScheduledOperation documents
  """
  set: [ScheduledOperationWhereUniqueInput!]
}

input ScheduledOperationUpdateOneInlineInput {
  """Connect existing ScheduledOperation document"""
  connect: ScheduledOperationWhereUniqueInput

  """Disconnect currently connected ScheduledOperation document"""
  disconnect: Boolean
}

"""Identifies documents"""
input ScheduledOperationWhereInput {
  """Logical AND on all given filters."""
  AND: [ScheduledOperationWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ScheduledOperationWhereInput!]

  """Logical OR on all given filters."""
  OR: [ScheduledOperationWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  description: String

  """All values containing the given string."""
  description_contains: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values that are contained in given list."""
  description_in: [String]

  """All values that are not equal to given value."""
  description_not: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values not ending with the given string"""
  description_not_ends_with: String

  """All values that are not contained in given list."""
  description_not_in: [String]

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values starting with the given string."""
  description_starts_with: String
  errorMessage: String

  """All values containing the given string."""
  errorMessage_contains: String

  """All values ending with the given string."""
  errorMessage_ends_with: String

  """All values that are contained in given list."""
  errorMessage_in: [String]

  """All values that are not equal to given value."""
  errorMessage_not: String

  """All values not containing the given string."""
  errorMessage_not_contains: String

  """All values not ending with the given string"""
  errorMessage_not_ends_with: String

  """All values that are not contained in given list."""
  errorMessage_not_in: [String]

  """All values not starting with the given string."""
  errorMessage_not_starts_with: String

  """All values starting with the given string."""
  errorMessage_starts_with: String
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput

  """All values containing the given json path."""
  rawPayload_json_path_exists: String

  """
  Recursively tries to find the provided JSON scalar value inside the field.
  It does use an exact match when comparing values.
  If you pass `null` as value the filter will be ignored. 
  Note: This filter fails if you try to look for a non scalar JSON value!
  """
  rawPayload_value_recursive: Json
  release: ScheduledReleaseWhereInput
  status: ScheduledOperationStatus

  """All values that are contained in given list."""
  status_in: [ScheduledOperationStatus]

  """All values that are not equal to given value."""
  status_not: ScheduledOperationStatus

  """All values that are not contained in given list."""
  status_not_in: [ScheduledOperationStatus]
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

"""References ScheduledOperation record uniquely"""
input ScheduledOperationWhereUniqueInput {
  id: ID
}

"""Scheduled Release system model"""
type ScheduledRelease implements Node {
  """The time the document was created"""
  createdAt: DateTime!

  """User that created this document"""
  createdBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """Release description"""
  description: String

  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """Potential stages that should be returned"""
    stages: [Stage!]! = [PUBLISHED, DRAFT]
  ): [ScheduledRelease!]!

  """Release error message"""
  errorMessage: String

  """The unique identifier"""
  id: ID!

  """Whether scheduled release should be run"""
  isActive: Boolean!

  """Whether scheduled release is implicit"""
  isImplicit: Boolean!

  """Operations to run with this release"""
  operations(
    after: String
    before: String
    first: Int

    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `operations` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `operations` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    orderBy: ScheduledOperationOrderByInput
    skip: Int
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime

  """User that last published this document"""
  publishedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """Release date and time"""
  releaseAt: DateTime

  """System stage field"""
  stage: Stage!

  """Release Status"""
  status: ScheduledReleaseStatus!

  """Release Title"""
  title: String

  """The time the document was updated"""
  updatedAt: DateTime!

  """User that last updated this document"""
  updatedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

input ScheduledReleaseConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: ScheduledReleaseWhereUniqueInput!
}

"""A connection to a list of items."""
type ScheduledReleaseConnection {
  aggregate: Aggregate!

  """A list of edges."""
  edges: [ScheduledReleaseEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input ScheduledReleaseCreateInput {
  createdAt: DateTime
  description: String
  errorMessage: String
  isActive: Boolean = true
  releaseAt: DateTime
  title: String
  updatedAt: DateTime
}

input ScheduledReleaseCreateManyInlineInput {
  """Connect multiple existing ScheduledRelease documents"""
  connect: [ScheduledReleaseWhereUniqueInput!]

  """Create and connect multiple existing ScheduledRelease documents"""
  create: [ScheduledReleaseCreateInput!]
}

input ScheduledReleaseCreateOneInlineInput {
  """Connect one existing ScheduledRelease document"""
  connect: ScheduledReleaseWhereUniqueInput

  """Create and connect one ScheduledRelease document"""
  create: ScheduledReleaseCreateInput
}

"""An edge in a connection."""
type ScheduledReleaseEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: ScheduledRelease!
}

"""Identifies documents"""
input ScheduledReleaseManyWhereInput {
  """Logical AND on all given filters."""
  AND: [ScheduledReleaseWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ScheduledReleaseWhereInput!]

  """Logical OR on all given filters."""
  OR: [ScheduledReleaseWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  description: String

  """All values containing the given string."""
  description_contains: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values that are contained in given list."""
  description_in: [String]

  """All values that are not equal to given value."""
  description_not: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values not ending with the given string"""
  description_not_ends_with: String

  """All values that are not contained in given list."""
  description_not_in: [String]

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values starting with the given string."""
  description_starts_with: String
  errorMessage: String

  """All values containing the given string."""
  errorMessage_contains: String

  """All values ending with the given string."""
  errorMessage_ends_with: String

  """All values that are contained in given list."""
  errorMessage_in: [String]

  """All values that are not equal to given value."""
  errorMessage_not: String

  """All values not containing the given string."""
  errorMessage_not_contains: String

  """All values not ending with the given string"""
  errorMessage_not_ends_with: String

  """All values that are not contained in given list."""
  errorMessage_not_in: [String]

  """All values not starting with the given string."""
  errorMessage_not_starts_with: String

  """All values starting with the given string."""
  errorMessage_starts_with: String
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  isActive: Boolean

  """All values that are not equal to given value."""
  isActive_not: Boolean
  isImplicit: Boolean

  """All values that are not equal to given value."""
  isImplicit_not: Boolean
  operations_every: ScheduledOperationWhereInput
  operations_none: ScheduledOperationWhereInput
  operations_some: ScheduledOperationWhereInput
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  releaseAt: DateTime

  """All values greater than the given value."""
  releaseAt_gt: DateTime

  """All values greater than or equal the given value."""
  releaseAt_gte: DateTime

  """All values that are contained in given list."""
  releaseAt_in: [DateTime]

  """All values less than the given value."""
  releaseAt_lt: DateTime

  """All values less than or equal the given value."""
  releaseAt_lte: DateTime

  """All values that are not equal to given value."""
  releaseAt_not: DateTime

  """All values that are not contained in given list."""
  releaseAt_not_in: [DateTime]
  status: ScheduledReleaseStatus

  """All values that are contained in given list."""
  status_in: [ScheduledReleaseStatus]

  """All values that are not equal to given value."""
  status_not: ScheduledReleaseStatus

  """All values that are not contained in given list."""
  status_not_in: [ScheduledReleaseStatus]
  title: String

  """All values containing the given string."""
  title_contains: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values that are contained in given list."""
  title_in: [String]

  """All values that are not equal to given value."""
  title_not: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values not ending with the given string"""
  title_not_ends_with: String

  """All values that are not contained in given list."""
  title_not_in: [String]

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values starting with the given string."""
  title_starts_with: String
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

enum ScheduledReleaseOrderByInput {
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  errorMessage_ASC
  errorMessage_DESC
  id_ASC
  id_DESC
  isActive_ASC
  isActive_DESC
  isImplicit_ASC
  isImplicit_DESC
  publishedAt_ASC
  publishedAt_DESC
  releaseAt_ASC
  releaseAt_DESC
  status_ASC
  status_DESC
  title_ASC
  title_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""System Scheduled Release Status"""
enum ScheduledReleaseStatus {
  COMPLETED
  FAILED
  IN_PROGRESS
  PENDING
}

input ScheduledReleaseUpdateInput {
  description: String
  errorMessage: String
  isActive: Boolean
  releaseAt: DateTime
  title: String
}

input ScheduledReleaseUpdateManyInlineInput {
  """Connect multiple existing ScheduledRelease documents"""
  connect: [ScheduledReleaseConnectInput!]

  """Create and connect multiple ScheduledRelease documents"""
  create: [ScheduledReleaseCreateInput!]

  """Delete multiple ScheduledRelease documents"""
  delete: [ScheduledReleaseWhereUniqueInput!]

  """Disconnect multiple ScheduledRelease documents"""
  disconnect: [ScheduledReleaseWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing ScheduledRelease documents
  """
  set: [ScheduledReleaseWhereUniqueInput!]

  """Update multiple ScheduledRelease documents"""
  update: [ScheduledReleaseUpdateWithNestedWhereUniqueInput!]

  """Upsert multiple ScheduledRelease documents"""
  upsert: [ScheduledReleaseUpsertWithNestedWhereUniqueInput!]
}

input ScheduledReleaseUpdateManyInput {
  description: String
  errorMessage: String
  isActive: Boolean
  releaseAt: DateTime
  title: String
}

input ScheduledReleaseUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: ScheduledReleaseUpdateManyInput!

  """Document search"""
  where: ScheduledReleaseWhereInput!
}

input ScheduledReleaseUpdateOneInlineInput {
  """Connect existing ScheduledRelease document"""
  connect: ScheduledReleaseWhereUniqueInput

  """Create and connect one ScheduledRelease document"""
  create: ScheduledReleaseCreateInput

  """Delete currently connected ScheduledRelease document"""
  delete: Boolean

  """Disconnect currently connected ScheduledRelease document"""
  disconnect: Boolean

  """Update single ScheduledRelease document"""
  update: ScheduledReleaseUpdateWithNestedWhereUniqueInput

  """Upsert single ScheduledRelease document"""
  upsert: ScheduledReleaseUpsertWithNestedWhereUniqueInput
}

input ScheduledReleaseUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: ScheduledReleaseUpdateInput!

  """Unique document search"""
  where: ScheduledReleaseWhereUniqueInput!
}

input ScheduledReleaseUpsertInput {
  """Create document if it didn't exist"""
  create: ScheduledReleaseCreateInput!

  """Update document if it exists"""
  update: ScheduledReleaseUpdateInput!
}

input ScheduledReleaseUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: ScheduledReleaseUpsertInput!

  """Unique document search"""
  where: ScheduledReleaseWhereUniqueInput!
}

"""Identifies documents"""
input ScheduledReleaseWhereInput {
  """Logical AND on all given filters."""
  AND: [ScheduledReleaseWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ScheduledReleaseWhereInput!]

  """Logical OR on all given filters."""
  OR: [ScheduledReleaseWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  description: String

  """All values containing the given string."""
  description_contains: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values that are contained in given list."""
  description_in: [String]

  """All values that are not equal to given value."""
  description_not: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values not ending with the given string"""
  description_not_ends_with: String

  """All values that are not contained in given list."""
  description_not_in: [String]

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values starting with the given string."""
  description_starts_with: String
  errorMessage: String

  """All values containing the given string."""
  errorMessage_contains: String

  """All values ending with the given string."""
  errorMessage_ends_with: String

  """All values that are contained in given list."""
  errorMessage_in: [String]

  """All values that are not equal to given value."""
  errorMessage_not: String

  """All values not containing the given string."""
  errorMessage_not_contains: String

  """All values not ending with the given string"""
  errorMessage_not_ends_with: String

  """All values that are not contained in given list."""
  errorMessage_not_in: [String]

  """All values not starting with the given string."""
  errorMessage_not_starts_with: String

  """All values starting with the given string."""
  errorMessage_starts_with: String
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  isActive: Boolean

  """All values that are not equal to given value."""
  isActive_not: Boolean
  isImplicit: Boolean

  """All values that are not equal to given value."""
  isImplicit_not: Boolean
  operations_every: ScheduledOperationWhereInput
  operations_none: ScheduledOperationWhereInput
  operations_some: ScheduledOperationWhereInput
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  releaseAt: DateTime

  """All values greater than the given value."""
  releaseAt_gt: DateTime

  """All values greater than or equal the given value."""
  releaseAt_gte: DateTime

  """All values that are contained in given list."""
  releaseAt_in: [DateTime]

  """All values less than the given value."""
  releaseAt_lt: DateTime

  """All values less than or equal the given value."""
  releaseAt_lte: DateTime

  """All values that are not equal to given value."""
  releaseAt_not: DateTime

  """All values that are not contained in given list."""
  releaseAt_not_in: [DateTime]
  status: ScheduledReleaseStatus

  """All values that are contained in given list."""
  status_in: [ScheduledReleaseStatus]

  """All values that are not equal to given value."""
  status_not: ScheduledReleaseStatus

  """All values that are not contained in given list."""
  status_not_in: [ScheduledReleaseStatus]
  title: String

  """All values containing the given string."""
  title_contains: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values that are contained in given list."""
  title_in: [String]

  """All values that are not equal to given value."""
  title_not: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values not ending with the given string"""
  title_not_ends_with: String

  """All values that are not contained in given list."""
  title_not_in: [String]

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values starting with the given string."""
  title_starts_with: String
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

"""References ScheduledRelease record uniquely"""
input ScheduledReleaseWhereUniqueInput {
  id: ID
}

"""Stage system enumeration"""
enum Stage {
  """The Draft is the default stage for all your content."""
  DRAFT

  """The Published stage is where you can publish your content to."""
  PUBLISHED
}

enum SystemDateTimeFieldVariation {
  BASE
  COMBINED
  LOCALIZATION
}

type TitleBlock {
  """The unique identifier"""
  id: ID!
  identifier: String!

  """System Locale field"""
  locale: Locale!

  """Get the other localizations for this document"""
  localizations(
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false

    """
    Potential locales that should be returned. 
    
    The order of locales will also override locale fall-backing behaviour in the query's subtree.
    
    Note any related model with localized fields in the query's subtree will be affected.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    
    Consider using this in conjunction with forceParentLocale on the children relation fields.
    """
    locales: [Locale!]! = [en, nl]
  ): [TitleBlock!]!

  """System stage field"""
  stage: Stage!
  subSubtitle: String
  subtitle: String
  title: String
  titleWeight: TitleWeight
}

input TitleBlockConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: TitleBlockWhereUniqueInput!
}

"""A connection to a list of items."""
type TitleBlockConnection {
  aggregate: Aggregate!

  """A list of edges."""
  edges: [TitleBlockEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input TitleBlockCreateInput {
  identifier: String!

  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: TitleBlockCreateLocalizationsInput

  """subSubtitle input for default locale (en)"""
  subSubtitle: String

  """subtitle input for default locale (en)"""
  subtitle: String

  """title input for default locale (en)"""
  title: String
  titleWeight: TitleWeight
}

input TitleBlockCreateLocalizationDataInput {
  subSubtitle: String
  subtitle: String
  title: String
}

input TitleBlockCreateLocalizationInput {
  """Localization input"""
  data: TitleBlockCreateLocalizationDataInput!
  locale: Locale!
}

input TitleBlockCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [TitleBlockCreateLocalizationInput!]
}

input TitleBlockCreateManyInlineInput {
  """Create and connect multiple existing TitleBlock documents"""
  create: [TitleBlockCreateInput!]
}

input TitleBlockCreateOneInlineInput {
  """Create and connect one TitleBlock document"""
  create: TitleBlockCreateInput
}

input TitleBlockCreateWithPositionInput {
  """Document to create"""
  data: TitleBlockCreateInput!

  """
  Position in the list of existing component instances, will default to appending at the end of list
  """
  position: ConnectPositionInput
}

"""An edge in a connection."""
type TitleBlockEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: TitleBlock!
}

"""Identifies documents"""
input TitleBlockManyWhereInput {
  """Logical AND on all given filters."""
  AND: [TitleBlockWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TitleBlockWhereInput!]

  """Logical OR on all given filters."""
  OR: [TitleBlockWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  identifier: String

  """All values containing the given string."""
  identifier_contains: String

  """All values ending with the given string."""
  identifier_ends_with: String

  """All values that are contained in given list."""
  identifier_in: [String]

  """All values that are not equal to given value."""
  identifier_not: String

  """All values not containing the given string."""
  identifier_not_contains: String

  """All values not ending with the given string"""
  identifier_not_ends_with: String

  """All values that are not contained in given list."""
  identifier_not_in: [String]

  """All values not starting with the given string."""
  identifier_not_starts_with: String

  """All values starting with the given string."""
  identifier_starts_with: String
  titleWeight: TitleWeight

  """All values that are contained in given list."""
  titleWeight_in: [TitleWeight]

  """All values that are not equal to given value."""
  titleWeight_not: TitleWeight

  """All values that are not contained in given list."""
  titleWeight_not_in: [TitleWeight]
}

enum TitleBlockOrderByInput {
  id_ASC
  id_DESC
  identifier_ASC
  identifier_DESC
  subSubtitle_ASC
  subSubtitle_DESC
  subtitle_ASC
  subtitle_DESC
  titleWeight_ASC
  titleWeight_DESC
  title_ASC
  title_DESC
}

union TitleBlockParent = CvPage

input TitleBlockParentConnectInput {
  CvPage: CvPageConnectInput
}

input TitleBlockParentCreateInput {
  CvPage: CvPageCreateInput
}

input TitleBlockParentCreateManyInlineInput {
  """Connect multiple existing TitleBlockParent documents"""
  connect: [TitleBlockParentWhereUniqueInput!]

  """Create and connect multiple existing TitleBlockParent documents"""
  create: [TitleBlockParentCreateInput!]
}

input TitleBlockParentCreateOneInlineInput {
  """Connect one existing TitleBlockParent document"""
  connect: TitleBlockParentWhereUniqueInput

  """Create and connect one TitleBlockParent document"""
  create: TitleBlockParentCreateInput
}

input TitleBlockParentUpdateInput {
  CvPage: CvPageUpdateInput
}

input TitleBlockParentUpdateManyInlineInput {
  """Connect multiple existing TitleBlockParent documents"""
  connect: [TitleBlockParentConnectInput!]

  """Create and connect multiple TitleBlockParent documents"""
  create: [TitleBlockParentCreateInput!]

  """Delete multiple TitleBlockParent documents"""
  delete: [TitleBlockParentWhereUniqueInput!]

  """Disconnect multiple TitleBlockParent documents"""
  disconnect: [TitleBlockParentWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing TitleBlockParent documents
  """
  set: [TitleBlockParentWhereUniqueInput!]

  """Update multiple TitleBlockParent documents"""
  update: [TitleBlockParentUpdateWithNestedWhereUniqueInput!]

  """Upsert multiple TitleBlockParent documents"""
  upsert: [TitleBlockParentUpsertWithNestedWhereUniqueInput!]
}

input TitleBlockParentUpdateManyWithNestedWhereInput {
  CvPage: CvPageUpdateManyWithNestedWhereInput
}

input TitleBlockParentUpdateOneInlineInput {
  """Connect existing TitleBlockParent document"""
  connect: TitleBlockParentWhereUniqueInput

  """Create and connect one TitleBlockParent document"""
  create: TitleBlockParentCreateInput

  """Delete currently connected TitleBlockParent document"""
  delete: Boolean

  """Disconnect currently connected TitleBlockParent document"""
  disconnect: Boolean

  """Update single TitleBlockParent document"""
  update: TitleBlockParentUpdateWithNestedWhereUniqueInput

  """Upsert single TitleBlockParent document"""
  upsert: TitleBlockParentUpsertWithNestedWhereUniqueInput
}

input TitleBlockParentUpdateWithNestedWhereUniqueInput {
  CvPage: CvPageUpdateWithNestedWhereUniqueInput
}

input TitleBlockParentUpsertWithNestedWhereUniqueInput {
  CvPage: CvPageUpsertWithNestedWhereUniqueInput
}

input TitleBlockParentWhereInput {
  CvPage: CvPageWhereInput
}

input TitleBlockParentWhereUniqueInput {
  CvPage: CvPageWhereUniqueInput
}

input TitleBlockUpdateInput {
  identifier: String

  """Manage document localizations"""
  localizations: TitleBlockUpdateLocalizationsInput

  """subSubtitle input for default locale (en)"""
  subSubtitle: String

  """subtitle input for default locale (en)"""
  subtitle: String

  """title input for default locale (en)"""
  title: String
  titleWeight: TitleWeight
}

input TitleBlockUpdateLocalizationDataInput {
  subSubtitle: String
  subtitle: String
  title: String
}

input TitleBlockUpdateLocalizationInput {
  data: TitleBlockUpdateLocalizationDataInput!
  locale: Locale!
}

input TitleBlockUpdateLocalizationsInput {
  """Localizations to create"""
  create: [TitleBlockCreateLocalizationInput!]

  """Localizations to delete"""
  delete: [Locale!]

  """Localizations to update"""
  update: [TitleBlockUpdateLocalizationInput!]
  upsert: [TitleBlockUpsertLocalizationInput!]
}

input TitleBlockUpdateManyInlineInput {
  """Create and connect multiple TitleBlock component instances"""
  create: [TitleBlockCreateWithPositionInput!]

  """Delete multiple TitleBlock documents"""
  delete: [TitleBlockWhereUniqueInput!]

  """Update multiple TitleBlock component instances"""
  update: [TitleBlockUpdateWithNestedWhereUniqueAndPositionInput!]

  """Upsert multiple TitleBlock component instances"""
  upsert: [TitleBlockUpsertWithNestedWhereUniqueAndPositionInput!]
}

input TitleBlockUpdateManyInput {
  """Optional updates to localizations"""
  localizations: TitleBlockUpdateManyLocalizationsInput

  """subSubtitle input for default locale (en)"""
  subSubtitle: String

  """subtitle input for default locale (en)"""
  subtitle: String

  """title input for default locale (en)"""
  title: String
  titleWeight: TitleWeight
}

input TitleBlockUpdateManyLocalizationDataInput {
  subSubtitle: String
  subtitle: String
  title: String
}

input TitleBlockUpdateManyLocalizationInput {
  data: TitleBlockUpdateManyLocalizationDataInput!
  locale: Locale!
}

input TitleBlockUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [TitleBlockUpdateManyLocalizationInput!]
}

input TitleBlockUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: TitleBlockUpdateManyInput!

  """Document search"""
  where: TitleBlockWhereInput!
}

input TitleBlockUpdateOneInlineInput {
  """Create and connect one TitleBlock document"""
  create: TitleBlockCreateInput

  """Delete currently connected TitleBlock document"""
  delete: Boolean

  """Update single TitleBlock document"""
  update: TitleBlockUpdateWithNestedWhereUniqueInput

  """Upsert single TitleBlock document"""
  upsert: TitleBlockUpsertWithNestedWhereUniqueInput
}

input TitleBlockUpdateWithNestedWhereUniqueAndPositionInput {
  """Document to update"""
  data: TitleBlockUpdateInput

  """
  Position in the list of existing component instances, will default to appending at the end of list
  """
  position: ConnectPositionInput

  """Unique component instance search"""
  where: TitleBlockWhereUniqueInput!
}

input TitleBlockUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: TitleBlockUpdateInput!

  """Unique document search"""
  where: TitleBlockWhereUniqueInput!
}

input TitleBlockUpsertInput {
  """Create document if it didn't exist"""
  create: TitleBlockCreateInput!

  """Update document if it exists"""
  update: TitleBlockUpdateInput!
}

input TitleBlockUpsertLocalizationInput {
  create: TitleBlockCreateLocalizationDataInput!
  locale: Locale!
  update: TitleBlockUpdateLocalizationDataInput!
}

input TitleBlockUpsertWithNestedWhereUniqueAndPositionInput {
  """Document to upsert"""
  data: TitleBlockUpsertInput

  """
  Position in the list of existing component instances, will default to appending at the end of list
  """
  position: ConnectPositionInput

  """Unique component instance search"""
  where: TitleBlockWhereUniqueInput!
}

input TitleBlockUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: TitleBlockUpsertInput!

  """Unique document search"""
  where: TitleBlockWhereUniqueInput!
}

"""Identifies documents"""
input TitleBlockWhereInput {
  """Logical AND on all given filters."""
  AND: [TitleBlockWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TitleBlockWhereInput!]

  """Logical OR on all given filters."""
  OR: [TitleBlockWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  identifier: String

  """All values containing the given string."""
  identifier_contains: String

  """All values ending with the given string."""
  identifier_ends_with: String

  """All values that are contained in given list."""
  identifier_in: [String]

  """All values that are not equal to given value."""
  identifier_not: String

  """All values not containing the given string."""
  identifier_not_contains: String

  """All values not ending with the given string"""
  identifier_not_ends_with: String

  """All values that are not contained in given list."""
  identifier_not_in: [String]

  """All values not starting with the given string."""
  identifier_not_starts_with: String

  """All values starting with the given string."""
  identifier_starts_with: String
  subSubtitle: String

  """All values containing the given string."""
  subSubtitle_contains: String

  """All values ending with the given string."""
  subSubtitle_ends_with: String

  """All values that are contained in given list."""
  subSubtitle_in: [String]

  """All values that are not equal to given value."""
  subSubtitle_not: String

  """All values not containing the given string."""
  subSubtitle_not_contains: String

  """All values not ending with the given string"""
  subSubtitle_not_ends_with: String

  """All values that are not contained in given list."""
  subSubtitle_not_in: [String]

  """All values not starting with the given string."""
  subSubtitle_not_starts_with: String

  """All values starting with the given string."""
  subSubtitle_starts_with: String
  subtitle: String

  """All values containing the given string."""
  subtitle_contains: String

  """All values ending with the given string."""
  subtitle_ends_with: String

  """All values that are contained in given list."""
  subtitle_in: [String]

  """All values that are not equal to given value."""
  subtitle_not: String

  """All values not containing the given string."""
  subtitle_not_contains: String

  """All values not ending with the given string"""
  subtitle_not_ends_with: String

  """All values that are not contained in given list."""
  subtitle_not_in: [String]

  """All values not starting with the given string."""
  subtitle_not_starts_with: String

  """All values starting with the given string."""
  subtitle_starts_with: String
  title: String
  titleWeight: TitleWeight

  """All values that are contained in given list."""
  titleWeight_in: [TitleWeight]

  """All values that are not equal to given value."""
  titleWeight_not: TitleWeight

  """All values that are not contained in given list."""
  titleWeight_not_in: [TitleWeight]

  """All values containing the given string."""
  title_contains: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values that are contained in given list."""
  title_in: [String]

  """All values that are not equal to given value."""
  title_not: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values not ending with the given string"""
  title_not_ends_with: String

  """All values that are not contained in given list."""
  title_not_in: [String]

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values starting with the given string."""
  title_starts_with: String
}

"""References TitleBlock record uniquely"""
input TitleBlockWhereUniqueInput {
  id: ID
  identifier: String
}

"""
This indicated the importance of the title and its search engine optimisation weight.
"""
enum TitleWeight {
  h1
  h2
  h3
}

input UnpublishLocaleInput {
  """Locales to unpublish"""
  locale: Locale!

  """Stages to unpublish selected locales from"""
  stages: [Stage!]!
}

"""User system model"""
type User implements Node {
  """The time the document was created"""
  createdAt: DateTime!

  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """Potential stages that should be returned"""
    stages: [Stage!]! = [PUBLISHED, DRAFT]
  ): [User!]!

  """The unique identifier"""
  id: ID!

  """Flag to determine if user is active or not"""
  isActive: Boolean!

  """User Kind. Can be either MEMBER, PAT or PUBLIC"""
  kind: UserKind!

  """The username"""
  name: String!

  """Profile Picture url"""
  picture: String

  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime

  """System stage field"""
  stage: Stage!

  """The time the document was updated"""
  updatedAt: DateTime!
}

input UserConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: UserWhereUniqueInput!
}

"""A connection to a list of items."""
type UserConnection {
  aggregate: Aggregate!

  """A list of edges."""
  edges: [UserEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input UserCreateManyInlineInput {
  """Connect multiple existing User documents"""
  connect: [UserWhereUniqueInput!]
}

input UserCreateOneInlineInput {
  """Connect one existing User document"""
  connect: UserWhereUniqueInput
}

"""An edge in a connection."""
type UserEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: User!
}

"""System User Kind"""
enum UserKind {
  MEMBER
  PAT
  PUBLIC
  WEBHOOK
}

"""Identifies documents"""
input UserManyWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  documentInStages_every: UserWhereStageInput
  documentInStages_none: UserWhereStageInput
  documentInStages_some: UserWhereStageInput
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  isActive: Boolean

  """All values that are not equal to given value."""
  isActive_not: Boolean
  kind: UserKind

  """All values that are contained in given list."""
  kind_in: [UserKind]

  """All values that are not equal to given value."""
  kind_not: UserKind

  """All values that are not contained in given list."""
  kind_not_in: [UserKind]
  name: String

  """All values containing the given string."""
  name_contains: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values that are contained in given list."""
  name_in: [String]

  """All values that are not equal to given value."""
  name_not: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values not ending with the given string"""
  name_not_ends_with: String

  """All values that are not contained in given list."""
  name_not_in: [String]

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values starting with the given string."""
  name_starts_with: String
  picture: String

  """All values containing the given string."""
  picture_contains: String

  """All values ending with the given string."""
  picture_ends_with: String

  """All values that are contained in given list."""
  picture_in: [String]

  """All values that are not equal to given value."""
  picture_not: String

  """All values not containing the given string."""
  picture_not_contains: String

  """All values not ending with the given string"""
  picture_not_ends_with: String

  """All values that are not contained in given list."""
  picture_not_in: [String]

  """All values not starting with the given string."""
  picture_not_starts_with: String

  """All values starting with the given string."""
  picture_starts_with: String
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
}

enum UserOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  isActive_ASC
  isActive_DESC
  kind_ASC
  kind_DESC
  name_ASC
  name_DESC
  picture_ASC
  picture_DESC
  publishedAt_ASC
  publishedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input UserUpdateManyInlineInput {
  """Connect multiple existing User documents"""
  connect: [UserConnectInput!]

  """Disconnect multiple User documents"""
  disconnect: [UserWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing User documents
  """
  set: [UserWhereUniqueInput!]
}

input UserUpdateOneInlineInput {
  """Connect existing User document"""
  connect: UserWhereUniqueInput

  """Disconnect currently connected User document"""
  disconnect: Boolean
}

"""
This contains a set of filters that can be used to compare values internally
"""
input UserWhereComparatorInput {
  """
  This field can be used to request to check if the entry is outdated by internal comparison
  """
  outdated_to: Boolean
}

"""Identifies documents"""
input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  documentInStages_every: UserWhereStageInput
  documentInStages_none: UserWhereStageInput
  documentInStages_some: UserWhereStageInput
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  isActive: Boolean

  """All values that are not equal to given value."""
  isActive_not: Boolean
  kind: UserKind

  """All values that are contained in given list."""
  kind_in: [UserKind]

  """All values that are not equal to given value."""
  kind_not: UserKind

  """All values that are not contained in given list."""
  kind_not_in: [UserKind]
  name: String

  """All values containing the given string."""
  name_contains: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values that are contained in given list."""
  name_in: [String]

  """All values that are not equal to given value."""
  name_not: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values not ending with the given string"""
  name_not_ends_with: String

  """All values that are not contained in given list."""
  name_not_in: [String]

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values starting with the given string."""
  name_starts_with: String
  picture: String

  """All values containing the given string."""
  picture_contains: String

  """All values ending with the given string."""
  picture_ends_with: String

  """All values that are contained in given list."""
  picture_in: [String]

  """All values that are not equal to given value."""
  picture_not: String

  """All values not containing the given string."""
  picture_not_contains: String

  """All values not ending with the given string"""
  picture_not_ends_with: String

  """All values that are not contained in given list."""
  picture_not_in: [String]

  """All values not starting with the given string."""
  picture_not_starts_with: String

  """All values starting with the given string."""
  picture_starts_with: String
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input UserWhereStageInput {
  """Logical AND on all given filters."""
  AND: [UserWhereStageInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereStageInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereStageInput!]

  """
  This field contains fields which can be set as true or false to specify an internal comparison
  """
  compareWithParent: UserWhereComparatorInput

  """Specify the stage to compare with"""
  stage: Stage
}

"""References User record uniquely"""
input UserWhereUniqueInput {
  id: ID
}

type Version {
  createdAt: DateTime!
  id: ID!
  revision: Int!
  stage: Stage!
}

input VersionWhereInput {
  id: ID!
  revision: Int!
  stage: Stage!
}

enum _FilterKind {
  AND
  NOT
  OR
  contains
  contains_all
  contains_none
  contains_some
  ends_with
  eq
  eq_not
  gt
  gte
  in
  json_path_exists
  json_value_recursive
  lt
  lte
  not_contains
  not_ends_with
  not_in
  not_starts_with
  relational_every
  relational_none
  relational_single
  relational_some
  search
  starts_with
}

enum _MutationInputFieldKind {
  enum
  relation
  richText
  richTextWithEmbeds
  scalar
  union
  virtual
}

enum _MutationKind {
  create
  delete
  deleteMany
  publish
  publishMany
  schedulePublish
  scheduleUnpublish
  unpublish
  unpublishMany
  update
  updateMany
  upsert
}

enum _OrderDirection {
  asc
  desc
}

enum _RelationInputCardinality {
  many
  one
}

enum _RelationInputKind {
  create
  update
}

enum _RelationKind {
  regular
  union
}

enum _SystemDateTimeFieldVariation {
  base
  combined
  localization
}